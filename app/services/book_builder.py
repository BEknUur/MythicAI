import json
import base64
from io import BytesIO
from pathlib import Path
from PIL import Image, ImageFilter, ImageEnhance, ImageDraw, ImageFont
from app.services.llm_client import generate_text, analyze_photo, analyze_photo_for_card, generate_scene_chapter, strip_cliches, generate_unique_chapter
import markdown
import pdfkit
import qrcode
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as patches
from typing import List, Tuple
import random

def analyze_profile_data(posts_data: list) -> dict:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∫–Ω–∏–≥–∏"""
    if not posts_data:
        return {}
    
    profile = posts_data[0]
    posts = profile.get("latestPosts", [])
    
    analysis = {
        "username": profile.get("username", "Unknown"),
        "full_name": profile.get("fullName", ""),
        "bio": profile.get("biography", ""),
        "followers": profile.get("followersCount", 0),
        "following": profile.get("followsCount", 0),
        "posts_count": len(posts),
        "verified": profile.get("verified", False),
        "profile_pic": profile.get("profilePicUrl", ""),
        "locations": [],
        "captions": [],
        "hashtags": set(),
        "mentions": set(),
        "post_details": [],
        "total_likes": 0,
        "total_comments": 0,
        "post_dates": [],
        "most_liked_post": None,
        "most_commented_post": None,
        "common_hashtags": [],
        "mentioned_users": []
    }
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞—Ö
    for post in posts:
        post_info = {
            "caption": post.get("caption", ""),
            "location": post.get("locationName", ""),
            "likes": post.get("likesCount", 0),
            "comments": post.get("commentsCount", 0),
            "type": post.get("type", ""),
            "alt": post.get("alt", ""),
            "timestamp": post.get("timestamp", ""),
            "hashtags": post.get("hashtags", []),
            "mentions": post.get("mentions", []),
            "url": post.get("url", "")
        }
        analysis["post_details"].append(post_info)
        
        # –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if post.get("likesCount"):
            analysis["total_likes"] += post["likesCount"]
            if not analysis["most_liked_post"] or post["likesCount"] > analysis["most_liked_post"]["likes"]:
                analysis["most_liked_post"] = post_info
                
        if post.get("commentsCount"):
            analysis["total_comments"] += post["commentsCount"]
            if not analysis["most_commented_post"] or post["commentsCount"] > analysis["most_commented_post"]["comments"]:
                analysis["most_commented_post"] = post_info
        
        if post.get("locationName"):
            analysis["locations"].append(post["locationName"])
        
        if post.get("caption"):
            analysis["captions"].append(post["caption"])
        
        if post.get("timestamp"):
            analysis["post_dates"].append(post["timestamp"])
            
        analysis["hashtags"].update(post.get("hashtags", []))
        analysis["mentions"].update(post.get("mentions", []))
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏
    hashtag_count = {}
    for post in posts:
        for hashtag in post.get("hashtags", []):
            hashtag_count[hashtag] = hashtag_count.get(hashtag, 0) + 1
    
    analysis["common_hashtags"] = sorted(hashtag_count.items(), key=lambda x: x[1], reverse=True)[:5]
    analysis["mentioned_users"] = list(analysis["mentions"])[:10]
    
    return analysis

def create_markdown_from_content(content: dict, analysis: dict, images: list[Path]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç Markdown –≤–µ—Ä—Å–∏—é –∫–Ω–∏–≥–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ PDF"""
    
    username = analysis.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
    full_name = analysis.get('full_name', username)
    followers = analysis.get('followers', 0)
    following = analysis.get('following', 0)
    posts_count = analysis.get('posts_count', 0)
    bio = analysis.get('bio', '')
    verified = analysis.get('verified', False)
    total_likes = analysis.get('total_likes', 0)
    total_comments = analysis.get('total_comments', 0)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Instagram
    real_captions = analysis.get('captions', [])[:6]
    common_hashtags = analysis.get('common_hashtags', [])[:5]
    mentioned_users = analysis.get('mentioned_users', [])[:5]
    locations = analysis.get('locations', [])[:5]
    most_liked = analysis.get('most_liked_post')
    
    markdown_content = f"""
# {content.get('title', '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∫–Ω–∏–≥–∞ –æ @' + username)}

*–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—Å–≤—è—â–µ–Ω–∏–µ*

---

## @{username}
### {full_name}
{f'‚úì **Verified**' if verified else ''}

---

## üéØ –¶–∏—Ñ—Ä—ã –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è

| –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ |
|------------|----------|
| üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ | {followers:,} |
| üì± –ü–æ—Å—Ç—ã | {posts_count} |
| üë• –ü–æ–¥–ø–∏—Å–∫–∏ | {following:,} |
| ‚ù§Ô∏è –õ–∞–π–∫–∏ | {total_likes:,} |
| üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ | {total_comments:,} |

{f'> *"{bio}"*' if bio else ''}

{content.get('engagement_story', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–≤–æ—Ä–∏—Ç —Å–∞–º–∞ –∑–∞ —Å–µ–±—è...')}

---

## üí´ –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ

{content.get('intro', '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Å–ª–æ–≤–∞ –æ –≤—Å—Ç—Ä–µ—á–µ...')}

---

## üì± Instagram-–∫–Ω–∏–≥–∞

### üìù –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏ –∫ –ø–æ—Å—Ç–∞–º

{"".join([f'> "{caption}"\n\n' for caption in real_captions if caption])}



### üìç –ü–æ—Å–µ—â–µ–Ω–Ω—ã–µ –º–µ—Å—Ç–∞

{chr(10).join([f'- üìç {location}' for location in locations])}

{content.get('locations_journey', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –º–µ—Å—Ç–∞–º...')}

### üë• –£–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥—Ä—É–∑–µ–π

{" ".join([f'`@{user}`' for user in mentioned_users])}

{f'''
### üèÜ –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–æ—Å—Ç

> "{most_liked.get("caption", "–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏")}"

**‚ù§Ô∏è {most_liked.get("likes", 0)} –ª–∞–π–∫–æ–≤ ‚Ä¢ üí¨ {most_liked.get("comments", 0)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤**
''' if most_liked else ''}

---

## üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è –º–æ–º–µ–Ω—Ç–æ–≤

{content.get('captions_analysis', '–ê–Ω–∞–ª–∏–∑ –ø–æ–¥–ø–∏—Å–µ–π –∫ –ø–æ—Å—Ç–∞–º...')}

---

## üåü –¶–∏—Ç–∞—Ç–∞

> *"–ö—Ä–∞—Å–æ—Ç–∞ - —è–∑—ã–∫, –ø–æ–Ω—è—Ç–Ω—ã–π –≤—Å–µ–º"*
> 
> ‚Äî *–†–∞–ª—å—Ñ –≠–º–µ—Ä—Å–æ–Ω*

---

## üíù –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ

{content.get('final_message', '–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è...')}

---

*–° –∏—Å–∫—Ä–µ–Ω–Ω–∏–º –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ–º ‚ù§*

*–°–æ–∑–¥–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è*

‚ù¶ ‚ùß ‚ù¶
"""
    
    return markdown_content

def build_romantic_book(run_id: str, images: list[Path], texts: str, book_format: str = "classic"):
    """–°–æ–∑–¥–∞–Ω–∏–µ HTML –∫–Ω–∏–≥–∏ (—Å –≤—ã–±–æ—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–∞: classic –∏–ª–∏ zine)"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        run_dir = Path("data") / run_id
        posts_json = run_dir / "posts.json"
        images_dir = run_dir / "images"
        
        if posts_json.exists():
            posts_data = json.loads(posts_json.read_text(encoding="utf-8"))
        else:
            posts_data = []
        
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Å–æ–±–∏—Ä–∞–µ–º –∏—Ö
        actual_images = []
        if images_dir.exists():
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏
            for img_file in sorted(images_dir.glob("*")):
                if img_file.suffix.lower() in ['.jpg', '.jpeg', '.png', '.webp']:
                    actual_images.append(img_file)
        
        print(f"üíï –°–æ–∑–¥–∞–µ–º {book_format} –∫–Ω–∏–≥—É –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è")
        print(f"üì∏ –ù–∞–π–¥–µ–Ω–æ {len(actual_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ {images_dir}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        analysis = analyze_profile_data(posts_data)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
        if book_format == "zine":
            # –ú–æ–∑–∞–∏—á–Ω—ã–π –∑–∏–Ω - –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            content = generate_zine_content(analysis, actual_images)
            html = create_zine_html(content, analysis, actual_images)
        else:
            # –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∞—è Instagram-–∫–Ω–∏–≥–∞ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞
            content = {"format": "literary"}  # –ü–µ—Ä–µ–¥–∞–µ–º –º–∏–Ω–∏–º—É–º –¥–∞–Ω–Ω—ã—Ö
            html = create_literary_instagram_book_html(content, analysis, actual_images)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ HTML —Ñ–∞–π–ª
        out = Path("data") / run_id
        out.mkdir(parents=True, exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Ñ–∞–π–ª
        html_file = out / "book.html"
        html_file.write_text(html, encoding="utf-8")
        
        print(f"‚úÖ {book_format.title()} –∫–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞!")
        print(f"üìñ HTML –≤–µ—Ä—Å–∏—è: {out / 'book.html'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}")
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
        try:
            basic_html = f"""
            <html>
            <head>
                <title>–ö–Ω–∏–≥–∞</title>
                <style>
                    body {{ background: white; font-family: serif; padding: 20px; }}
                    .error {{ background: #f8f9fa; padding: 20px; border-radius: 10px; text-align: center; }}
                </style>
            </head>
            <body>
                <div class="error">
                    <h1>üìñ –ö–Ω–∏–≥–∞</h1>
                    <p>–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}</p>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ</p>
                </div>
            </body>
            </html>
            """
            out = Path("data") / run_id
            out.mkdir(parents=True, exist_ok=True)
            
            html_file = out / "book.html"
            html_file.write_text(basic_html, encoding="utf-8")
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è HTML –≤–µ—Ä—Å–∏—è: {out / 'book.html'}")
            
        except Exception as final_error:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {final_error}")

def apply_dream_pastel_effect(img: Image.Image) -> Image.Image:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç Dream-Pastel –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–µ
        if img is None or img.size[0] == 0 or img.size[1] == 0:
            print("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return img
            
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if img.mode != 'RGB':
            img = img.convert('RGB')
        
        # –õ—ë–≥–∫–æ–µ —Ä–∞–∑–º—ã—Ç–∏–µ
        img = img.filter(ImageFilter.GaussianBlur(1.2))
        
        # –¶–≤–µ—Ç–æ–≤–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –≤ —Ç–µ–ø–ª—ã–µ —Ç–æ–Ω–∞
        enhancer = ImageEnhance.Color(img)
        img = enhancer.enhance(1.15)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–ø–ª—ã–π overlay
        overlay = Image.new('RGBA', img.size, (255, 220, 210, 25))  # peach #ffdcd2
        img = img.convert('RGBA')
        img = Image.alpha_composite(img, overlay)
        
        # –î–æ–±–∞–≤–ª—è–µ–º grain (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
        try:
            noise = np.random.randint(0, 15, (img.size[1], img.size[0], 3), dtype=np.uint8)
            noise_img = Image.fromarray(noise, 'RGB').convert('RGBA')
            noise_overlay = Image.new('RGBA', img.size, (0, 0, 0, 0))
            noise_overlay.paste(noise_img, (0, 0))
            img = Image.alpha_composite(img, noise_overlay)
        except Exception as noise_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —à—É–º–∞: {noise_error}")
        
        # –õ–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏
        enhancer = ImageEnhance.Brightness(img)
        img = enhancer.enhance(1.05)
        
        return img.convert('RGB')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ Dream-Pastel —ç—Ñ—Ñ–µ–∫—Ç–∞: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        try:
            return img.convert('RGB') if img.mode != 'RGB' else img
        except:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É
            placeholder = Image.new('RGB', (400, 300), (240, 240, 240))
            return placeholder

def create_collage_spread(img1: Image.Image, img2: Image.Image, caption: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–ª–∞–∂-—Ä–∞–∑–≤–æ—Ä–æ—Ç –∏–∑ –¥–≤—É—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        if img1 is None or img2 is None:
            print("‚ùå –û–¥–Ω–æ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–ª–ª–∞–∂–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return ""
            
        if img1.size[0] == 0 or img1.size[1] == 0 or img2.size[0] == 0 or img2.size[1] == 0:
            print("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–ª–ª–∞–∂–∞")
            return ""
        
        # –°–æ–∑–¥–∞–µ–º —Ö–æ–ª—Å—Ç –¥–ª—è –∫–æ–ª–ª–∞–∂–∞
        canvas_width = 1200
        canvas_height = 800
        canvas = Image.new('RGB', (canvas_width, canvas_height), (255, 250, 245))
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        img1_size = (500, 350)
        img2_size = (500, 350)
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        try:
            img1 = img1.resize(img1_size, Image.Resampling.LANCZOS)
            img2 = img2.resize(img2_size, Image.Resampling.LANCZOS)
        except Exception as resize_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞: {resize_error}")
            return ""
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º dream-pastel —ç—Ñ—Ñ–µ–∫—Ç
        img1 = apply_dream_pastel_effect(img1)
        img2 = apply_dream_pastel_effect(img2)
        
        # –†–∞–∑–º–µ—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–µ–±–æ–ª—å—à–∏–º –ø–æ–≤–æ—Ä–æ—Ç–æ–º
        try:
            img1_rotated = img1.rotate(-2, expand=True, fillcolor=(255, 250, 245))
            img2_rotated = img2.rotate(3, expand=True, fillcolor=(255, 250, 245))
            
            # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            pos1 = (50, 150)
            pos2 = (650, 200)
            
            canvas.paste(img1_rotated, pos1)
            canvas.paste(img2_rotated, pos2)
        except Exception as rotation_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {rotation_error}")
            # –†–∞–∑–º–µ—â–∞–µ–º –±–µ–∑ –ø–æ–≤–æ—Ä–æ—Ç–∞
            canvas.paste(img1, (50, 150))
            canvas.paste(img2, (650, 200))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ
        try:
            draw = ImageDraw.Draw(canvas)
            try:
                font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 24)
            except:
                font = ImageFont.load_default()
            
            # –¢–µ–∫—Å—Ç —Å —Ç–µ–Ω—å—é
            text_x = canvas_width // 2
            text_y = canvas_height - 100
            
            # –û–±—Ä–µ–∑–∞–µ–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π caption
            if len(caption) > 50:
                caption = caption[:47] + "..."
            
            # –¢–µ–Ω—å
            draw.text((text_x + 2, text_y + 2), caption, font=font, fill=(0, 0, 0, 100), anchor="mm")
            # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
            draw.text((text_x, text_y), caption, font=font, fill=(80, 60, 40), anchor="mm")
        except Exception as text_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞: {text_error}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        buffer = BytesIO()
        canvas.save(buffer, format='JPEG', quality=92)
        img_str = base64.b64encode(buffer.getvalue()).decode()
        return f"data:image/jpeg;base64,{img_str}"
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–ª–ª–∞–∂–∞: {e}")
        return ""

def create_infographic(analysis: dict) -> str:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫—É —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    try:
        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 4))
        fig.patch.set_facecolor('#fff5f0')
        
        # –ì—Ä–∞—Ñ–∏–∫ —Ä–æ—Å—Ç–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
        months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω']
        likes_growth = [100, 150, 220, 380, 520, analysis.get('total_likes', 600)]
        
        ax1.plot(months, likes_growth, color='#ff6b9d', linewidth=3, marker='o', markersize=8)
        ax1.fill_between(months, likes_growth, alpha=0.3, color='#ffb3d1')
        ax1.set_title('–†–æ—Å—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏', fontsize=14, color='#8b5a5a')
        ax1.set_ylabel('–õ–∞–π–∫–∏', color='#8b5a5a')
        ax1.grid(True, alpha=0.3)
        
        # –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ Followers/Following
        followers = analysis.get('followers', 1000)
        following = analysis.get('following', 500)
        sizes = [followers, following]
        labels = ['–ü–æ–¥–ø–∏—Å—á–∏–∫–∏', '–ü–æ–¥–ø–∏—Å–∫–∏']
        colors = ['#ff6b9d', '#ffd93d']
        
        ax2.pie(sizes, labels=labels, colors=colors, autopct='%1.0f', startangle=90)
        ax2.set_title('–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫', fontsize=14, color='#8b5a5a')
        
        plt.tight_layout()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ base64
        buffer = BytesIO()
        plt.savefig(buffer, format='PNG', dpi=150, bbox_inches='tight', facecolor='#fff5f0')
        plt.close()
        
        img_str = base64.b64encode(buffer.getvalue()).decode()
        return f"data:image/png;base64,{img_str}"
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏: {e}")
        return ""

def generate_playlist_for_photo(caption: str, index: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
    mood_tracks = {
        0: "Lana Del Rey - Young and Beautiful",
        1: "The 1975 - Somebody Else", 
        2: "Billie Eilish - lovely",
        3: "Clairo - Pretty Girl",
        4: "Rex Orange County - Best Friend",
        5: "Boy Pablo - Everytime",
        6: "Cuco - Lo Que Siento",
        7: "Mac DeMarco - Chamber of Reflection"
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç—Ä–µ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è (—Å fallback)
    try:
        prompt = f"""–ü–æ–¥–±–µ—Ä–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π dreampop/indie-—Ç—Ä–µ–∫ –∫ –æ–ø–∏—Å–∞–Ω–∏—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: "{caption[:100]}..."
        
        –û—Ç–≤–µ—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞"
        –°—Ç–∏–ª—å: –º–µ—á—Ç–∞—Ç–µ–ª—å–Ω—ã–π, –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–æ–∑–µ—Ä—Ü–∞–Ω–∏—è —Ñ–æ—Ç–æ.
        """
        
        suggested_track = generate_text(prompt, max_tokens=50)
        if suggested_track and len(suggested_track.strip()) > 5:
            return suggested_track.strip()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {e}")
    
    return mood_tracks.get(index % len(mood_tracks), "Dream Valley - Sunset Memories")

def create_qr_code(username: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç QR-–∫–æ–¥ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∞—Ä—Ö–∏–≤"""
    try:
        # –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥ —Å —Å—Å—ã–ª–∫–æ–π
        qr_url = f"https://instagram.com/{username}"
        qr = qrcode.QRCode(version=1, box_size=10, border=5)
        qr.add_data(qr_url)
        qr.make(fit=True)
        
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ QR-–∫–æ–¥–∞
        qr_img = qr.make_image(fill_color="black", back_color="white")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        buffer = BytesIO()
        qr_img.save(buffer, format='PNG')
        img_str = base64.b64encode(buffer.getvalue()).decode()
        return f"data:image/png;base64,{img_str}"
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ QR-–∫–æ–¥–∞: {e}")
        return ""

def format_statistics_creatively(stat_name: str, value: int) -> str:
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"""
    creative_formats = {
        'followers': f"{value:,} —Å–µ—Ä–¥–µ—Ü –≤ –∑—Ä–∏—Ç–µ–ª—å–Ω–æ–º –∑–∞–ª–µ",
        'following': f"{value:,} –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏—Ö –≥–æ–ª–æ—Å–æ–≤",
        'posts': f"{value} –∫–∞–¥—Ä–æ–≤ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞", 
        'likes': f"{value:,} –º–æ–º–µ–Ω—Ç–æ–≤ —Å—á–∞—Å—Ç—å—è",
        'comments': f"{value:,} –∏—Å–∫—Ä–µ–Ω–Ω–∏—Ö —Å–ª–æ–≤",
        'stories': f"{value} –º–≥–Ω–æ–≤–µ–Ω–∏–π –¥—É—à–∏"
    }
    return creative_formats.get(stat_name, f"{value:,}")

def add_text_rhythm(text: str) -> str:
    """–£–ª—É—á—à–∞–µ—Ç —Ä–∏—Ç–º —Ç–µ–∫—Å—Ç–∞, —á–µ—Ä–µ–¥—É—è –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ –¥–ª–∏–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"""
    sentences = text.split('. ')
    improved_sentences = []
    
    for i, sentence in enumerate(sentences):
        # –ö–∞–∂–¥–æ–µ 3-–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ª–∞–µ–º —Ü–∏—Ç–∞—Ç–æ–π
        if i > 0 and i % 3 == 0 and len(sentence) > 30:
            improved_sentences.append(f'<blockquote>"{sentence.strip()}."</blockquote>')
        else:
            improved_sentences.append(sentence.strip() + '.')
    
    return ' '.join(improved_sentences)

def add_english_voiceover(text: str) -> str:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ voice-over —Ñ—Ä–∞–∑—ã"""
    voiceover_phrases = [
        "*moment of truth*",
        "*pure magic*", 
        "*breathe it in*",
        "*frame perfect*",
        "*golden hour*",
        "*soul deep*",
        "*simply beautiful*",
        "*life in motion*"
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º voice-over –≤ –∫–æ–Ω–µ—Ü –∫–∞–∂–¥–æ–≥–æ –≤—Ç–æ—Ä–æ–≥–æ –∞–±–∑–∞—Ü–∞
    if len(text) > 100:
        import random
        phrase = random.choice(voiceover_phrases)
        return f"{text} <em class='voiceover'>{phrase}</em>"
    return text

def generate_zine_content(analysis: dict, images: list[Path]) -> dict:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–∑–∞–∏—á–Ω–æ–≥–æ –∑–∏–Ω–∞"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = analysis.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
    followers = analysis.get('followers', 0)
    bio = analysis.get('bio', '')
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    real_captions = analysis.get('captions', ['–ë–µ–∑ —Å–ª–æ–≤'])[:3]
    locations = analysis.get('locations', ['–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ'])[:2]
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ (–º–∞–∫—Å–∏–º—É–º 15 —Ñ–æ—Ç–æ)
    photo_cards = []
    valid_images = []
    context = f"Instagram –ø—Ä–æ—Ñ–∏–ª—å @{username}, {followers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, –±–∏–æ: {bio}"
    
    for i, img_path in enumerate(images[:15]):  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 15 —Ñ–æ—Ç–æ –¥–ª—è –∑–∏–Ω–∞
        if img_path.exists():
            try:
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
                card_types = ["micro", "trigger", "sms"]
                card_type = card_types[i % 3]
                card_content = analyze_photo_for_card(img_path, context, card_type)
                
                photo_cards.append({
                    'type': card_type,
                    'content': card_content,
                    'path': img_path
                })
                valid_images.append(img_path)
                
                print(f"üì∏ –ö–∞—Ä—Ç–æ—á–∫–∞ {i+1}/15 ({card_type}): {card_content[:40]}...")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ {img_path}: {e}")
    
    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ 3, —Å–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∏–Ω
    if len(valid_images) < 3:
        print(f"‚ö†Ô∏è –ú–∞–ª–æ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∑–∏–Ω–∞: {len(valid_images)}")
    
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(valid_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ {len(images)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Ü–µ–Ω
    scene_data = {
        'username': username,
        'followers': followers,
        'bio': bio,
        'captions': real_captions,
        'locations': locations,
        'photo_cards': photo_cards
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 5 –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Ü–µ–Ω
    content = {}
    
    try:
        # 1. –ó–ê–í–Ø–ó–ö–ê - –¥–Ω–µ–≤–Ω–∏–∫–æ–≤–∞—è –∑–∞–ø–∏—Å—å (–º–∞–∫—Å–∏–º—É–º 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        hook = generate_scene_chapter("hook", scene_data, valid_images)
        content['prologue'] = strip_cliches(hook)
        print(f"‚úÖ –ó–∞–≤—è–∑–∫–∞: {hook[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤—è–∑–∫–∏: {e}")
        content['prologue'] = f"–ù–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ @{username} —Å–ª—É—á–∞–π–Ω–æ. –ß—Ç–æ-—Ç–æ –∑–∞—Ü–µ–ø–∏–ª–æ."
    
    try:
        # 2. –ö–û–ù–§–õ–ò–ö–¢ - SMS-—Å—Ç–∏–ª—å (–º–∞–∫—Å–∏–º—É–º 4 —Å—Ç—Ä–æ–∫–∏)
        conflict = generate_scene_chapter("conflict", scene_data, valid_images)
        content['emotions'] = strip_cliches(conflict)
        print(f"‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç: {conflict[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞: {e}")
        content['emotions'] = f"‚Äî {real_captions[0] if real_captions else '–í—Å–µ —Ö–æ—Ä–æ—à–æ'}\n‚Äî –ù–æ –≥–ª–∞–∑–∞ –≥–æ–≤–æ—Ä—è—Ç –¥—Ä—É–≥–æ–µ."
    
    try:
        # 3. –ü–û–í–û–†–û–¢ - –º–æ–º–µ–Ω—Ç –æ–∑–∞—Ä–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        turn = generate_scene_chapter("turn", scene_data, valid_images)
        content['places'] = strip_cliches(turn)
        print(f"‚úÖ –ü–æ–≤–æ—Ä–æ—Ç: {turn[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞: {e}")
        content['places'] = f"–û–¥–∏–Ω –∫–∞–¥—Ä –∏–∑ {locations[0] if locations else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–∞'} –∏–∑–º–µ–Ω–∏–ª –≤—Å–µ. –ó–¥–µ—Å—å –ø–∞—Ö–ª–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å—é."
    
    try:
        # 4. –ö–£–õ–¨–ú–ò–ù–ê–¶–ò–Ø - —Ü–∏—Ç–∞—Ç—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        climax = generate_scene_chapter("climax", scene_data, valid_images)
        content['community'] = strip_cliches(climax)
        print(f"‚úÖ –ö—É–ª—å–º–∏–Ω–∞—Ü–∏—è: {climax[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫—É–ª—å–º–∏–Ω–∞—Ü–∏–∏: {e}")
        content['community'] = f"{followers} —á–µ–ª–æ–≤–µ–∫ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª–∏:\n‚Äî –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç—ã –ø–æ–∫–∞–∑–∞–ª —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ\n‚Äî –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å"
    
    try:
        # 5. –≠–ü–ò–õ–û–ì - –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (–º–∞–∫—Å–∏–º—É–º 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        epilogue = generate_scene_chapter("epilogue", scene_data, valid_images)
        content['legacy'] = strip_cliches(epilogue)
        print(f"‚úÖ –≠–ø–∏–ª–æ–≥: {epilogue[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —ç–ø–∏–ª–æ–≥–∞: {e}")
        content['legacy'] = "–õ–∏—Å—Ç–∞—é –ª–µ–Ω—Ç—É –≤ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ–≥–æ –¥–∏–∫–æ–≥–æ —Ü–≤–µ—Ç–∫–∞. –ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?"
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    content['title'] = f"–ó–∏–Ω @{username}"
    content['photo_cards'] = photo_cards
    content['valid_images_count'] = len(valid_images)
    content['reading_time'] = "5 –º–∏–Ω—É—Ç"
    
    return content

def generate_classic_book_content(analysis: dict, images: list[Path]) -> dict:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∫–Ω–∏–≥–∏"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    username = analysis.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
    full_name = analysis.get('full_name', username)
    bio = analysis.get('bio', '')
    followers = max(0, analysis.get('followers', 0))
    following = max(0, analysis.get('following', 0))
    posts_count = max(0, analysis.get('posts_count', 0))
    total_likes = max(0, analysis.get('total_likes', 0))
    total_comments = max(0, analysis.get('total_comments', 0))
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ü–∏—Ñ—Ä—ã –≤ –º–µ—Ç–∞—Ñ–æ—Ä—ã
    followers_metaphor = f"{followers} –æ–≥–æ–Ω—å–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –µ–≥–æ –ø—É—Ç—å" if followers > 100 else f"{followers} –≤–µ—Ä–Ω—ã—Ö —Å–ø—É—Ç–Ω–∏–∫–æ–≤ –∏–¥—É—Ç —Ä—è–¥–æ–º"
    posts_metaphor = f"{posts_count} —Å—Ç—Ä–∞–Ω–∏—Ü –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞" if posts_count > 0 else "–Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–Ω–∏–≥–µ –∂–∏–∑–Ω–∏"
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Instagram —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    real_captions = analysis.get('captions', [])[:6] if analysis.get('captions') else ['–ñ–∏–∑–Ω—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞']
    common_hashtags = analysis.get('common_hashtags', [])[:5] if analysis.get('common_hashtags') else [('beautiful', 1)]
    mentioned_users = analysis.get('mentioned_users', [])[:3] if analysis.get('mentioned_users') else []
    locations = analysis.get('locations', [])[:4] if analysis.get('locations') else ['–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ']
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø–æ–ª–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º (–∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ)
    photo_analyses = []
    valid_images = []
    context = f"Instagram –ø—Ä–æ—Ñ–∏–ª—å @{username}, {followers_metaphor}, –±–∏–æ: {bio}"
    
    for i, img_path in enumerate(images):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ —Ñ–æ—Ç–æ –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∫–Ω–∏–≥–∏
        if img_path.exists():
            try:
                # –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞
                analysis_text = analyze_photo(img_path, context, photo_index=i)
                photo_analyses.append(analysis_text)
                valid_images.append(img_path)
                print(f"üì∏ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ {i+1} ({['—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞', '–º–æ–Ω–æ–ª–æ–≥', '–¥–∏–∞–ª–æ–≥'][i % 3]}): {analysis_text[:60]}...")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ {img_path}: {e}")
    
    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ 3, –Ω–µ —Å–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É
    if len(valid_images) < 3:
        print(f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏: {len(valid_images)}")
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –≥–ª–∞–≤
    data_for_chapters = {
        'username': username,
        'full_name': full_name,
        'bio': bio,
        'followers': followers,
        'followers_metaphor': followers_metaphor,
        'following': following,
        'posts_count': posts_count,
        'posts_metaphor': posts_metaphor,
        'total_likes': total_likes,
        'captions': real_captions,
        'locations': locations,
        'mentioned_users': mentioned_users,
        'photo_analyses': photo_analyses
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —á–µ—Ç–∫–∏–º —Ñ–æ–∫—É—Å–æ–º –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã
    content = {}
    generated_texts = []  # –î–ª—è —Å—Ç—Ä–æ–≥–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
    
    # 1. –í–°–¢–†–ï–ß–ê - –†–∞—Å—Å–∫–∞–∑—á–∏–∫ –æ–±—ä—è—Å–Ω—è–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é
    print(f"üíï –°–æ–∑–¥–∞–µ–º –≤—Å—Ç—Ä–µ—á—É (–ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ)...")
    try:
        prologue = generate_unique_chapter("intro", data_for_chapters, generated_texts)
        content['prologue'] = prologue
        generated_texts.append(prologue[:100])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–ª–æ–≥–∞: {e}")
        content['prologue'] = f"–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É—é, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å, –∫–∞–∫ —Å–ª—É—á–∞–π–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏–ª —Ç–∞–ª–∞–Ω—Ç.\n\n@{username} –ø–æ–ø–∞–ª—Å—è –≤ –ª–µ–Ω—Ç–µ —Å–ª—É—á–∞–π–Ω–æ.\n\n{followers_metaphor} ‚Äî –Ω–æ –¥–µ–ª–æ –Ω–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö."
    
    # 2. –ö–û–ù–§–õ–ò–ö–¢ - –û–¥–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ç–∞–π–Ω–∞
    print(f"üíï –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç (—Å–æ–º–Ω–µ–Ω–∏—è)...")
    try:
        emotions_chapter = generate_unique_chapter("emotions", data_for_chapters, generated_texts)
        content['emotions'] = emotions_chapter
        generated_texts.append(emotions_chapter[:100])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–ª–∞–≤—ã –æ–± —ç–º–æ—Ü–∏—è—Ö: {e}")
        content['emotions'] = f'¬´{real_captions[0] if real_captions else "–í—Å–µ —Ö–æ—Ä–æ—à–æ"}¬ª ‚Äî –Ω–∞–ø–∏—Å–∞–Ω–æ –ø–æ–¥ —Ñ–æ—Ç–æ.\n\n–ù–æ –≥–ª–∞–∑–∞ –≥–æ–≤–æ—Ä—è—Ç –¥—Ä—É–≥–æ–µ.\n\n–í —É–≥–æ–ª–∫–∞—Ö —Ä—Ç–∞ –ø—Ä—è—á–µ—Ç—Å—è —É—Å—Ç–∞–ª–æ—Å—Ç—å.'
    
    # 3. –ü–û–í–û–†–û–¢–ù–´–ô –ö–ê–î–† - –ú–µ—Å—Ç–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–∞–π–Ω—ã
    print(f"üíï –°–æ–∑–¥–∞–µ–º –ø–æ–≤–æ—Ä–æ—Ç (–æ—Å–æ–∑–Ω–∞–Ω–∏–µ)...")
    try:
        places_chapter = generate_unique_chapter("places", data_for_chapters, generated_texts)
        content['places'] = places_chapter
        generated_texts.append(places_chapter[:100])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–ª–∞–≤—ã –æ –º–µ—Å—Ç–∞—Ö: {e}")
        content['places'] = f"–ö–∞–¥—Ä –∏–∑ {locations[0] if locations else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–∞'} –∏–∑–º–µ–Ω–∏–ª –≤—Å–µ.\n\n–ó–¥–µ—Å—å –ø–∞—Ö–ª–æ –¥–æ–∂–¥–µ–º –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å—é.\n\n–í–ø–µ—Ä–≤—ã–µ –∑–∞ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è ‚Äî –Ω–∞—Å—Ç–æ—è—â–∞—è —É–ª—ã–±–∫–∞."
    
    # 4. –†–ê–ó–†–ï–®–ï–ù–ò–ï - –†–µ–∞–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ —Ç–∞–π–Ω—É
    print(f"üíï –°–æ–∑–¥–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–ø—Ä–∏–Ω—è—Ç–∏–µ)...")
    try:
        community_chapter = generate_unique_chapter("community", data_for_chapters, generated_texts)
        content['community'] = community_chapter
        generated_texts.append(community_chapter[:100])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–ª–∞–≤—ã –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ: {e}")
        content['community'] = f'{followers_metaphor} –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n¬´–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç—ã –ø–æ–∫–∞–∑–∞–ª —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ¬ª ‚Äî –ø–∏—à–µ—Ç –ø–æ–¥—Ä—É–≥–∞.\n\n¬´–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å¬ª ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü.'
    
    # 5. –§–ò–ù–ê–õ - –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ
    print(f"üíï –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª (—Ä–æ—Å—Ç —Ä–∞—Å—Å–∫–∞–∑—á–∏–∫–∞)...")
    try:
        legacy_chapter = generate_unique_chapter("legacy", data_for_chapters, generated_texts)
        content['legacy'] = legacy_chapter
        generated_texts.append(legacy_chapter[:100])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≥–ª–∞–≤—ã: {e}")
        content['legacy'] = f"–ß—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤–∞–∂–Ω–æ–≥–æ?\n\n–ù–µ –ª–∞–π–∫–∏. –ù–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.\n\n–ú–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ —Ä–µ—à–∏–ª—Å—è –±—ã—Ç—å —Å–æ–±–æ–π.\n\n–Ø –ª–∏—Å—Ç–∞—é –ª–µ–Ω—Ç—É –≤ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ–≥–æ –¥–∏–∫–æ–≥–æ —Ü–≤–µ—Ç–∫–∞. –ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?"
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–∞–Ω–Ω—ã–µ
    content['title'] = f"–ò—Å—Ç–æ—Ä–∏—è @{username}"
    content['photo_stories'] = photo_analyses
    content['valid_images_count'] = len(valid_images)
    content['followers_metaphor'] = followers_metaphor
    content['posts_metaphor'] = posts_metaphor
    
    return content

def create_classic_book_html(content: dict, analysis: dict, images: list[Path]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç HTML –∫–Ω–∏–≥—É –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å –∂–∏–≤–æ–π —Ä–µ—á—å—é –∏ –±–µ–∑ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∑–º–æ–≤"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—É—Å—Ç—Ä–∞–Ω—è–µ–º –Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–∫–∏)
    username = analysis.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
    full_name = analysis.get('full_name', username)
    followers = analysis.get('followers', 0)
    following = analysis.get('following', 0)
    posts_count = analysis.get('posts_count', 0)
    bio = analysis.get('bio', '')
    verified = analysis.get('verified', False)
    
    # –ú–µ—Ç–∞—Ñ–æ—Ä—ã –≤–º–µ—Å—Ç–æ —Å—É—Ö–∏—Ö —Ü–∏—Ñ—Ä
    followers_metaphor = content.get('followers_metaphor', f"{followers} –æ–≥–æ–Ω—å–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ")
    posts_metaphor = content.get('posts_metaphor', f"{posts_count} —Å—Ç—Ä–∞–Ω–∏—Ü –¥–Ω–µ–≤–Ω–∏–∫–∞")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∫–Ω–∏–≥–∏
    processed_images = []
    for i, img_path in enumerate(images):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ —Ñ–æ—Ç–æ
        if img_path.exists():
            try:
                with Image.open(img_path) as img:
                    if img.mode != 'RGB':
                        img = img.convert('RGB')
                    
                    # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∫–Ω–∏–≥–∏
                    max_size = (800, 600)
                    img.thumbnail(max_size, Image.Resampling.LANCZOS)
                    
                    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
                    enhancer = ImageEnhance.Contrast(img)
                    img = enhancer.enhance(1.05)
                    
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
                    buffer = BytesIO()
                    img.save(buffer, format='JPEG', quality=88)
                    img_str = base64.b64encode(buffer.getvalue()).decode()
                    processed_images.append(f"data:image/jpeg;base64,{img_str}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path}: {e}")
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    real_captions = analysis.get('captions', ['–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏'])[:len(processed_images)]
    locations = analysis.get('locations', ['–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'])[:3]
    photo_stories = content.get('photo_stories', [])
    
    # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ "–ú–æ–º–µ–Ω—Ç X" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ
    valid_photo_count = len(processed_images)
    
    # HTML —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    html = f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>{content.get('title', f'–ò—Å—Ç–æ—Ä–∏—è @{username}')}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&family=Playfair+Display:wght@400;500;700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
    
    <style>
    :root {{
        --vanilla-bg: #faf8f3;
        --cream-bg: #f7f4ed;
        --soft-beige: #f2ede2;
        --warm-white: #fefcf8;
        --text-dark: #2c2a26;
        --text-medium: #5a5652;
        --text-light: #8b8680;
        --accent-warm: #d4af8c;
        --shadow-soft: rgba(60, 50, 40, 0.08);
    }}
    
    body {{
        font-family: 'Crimson Text', serif;
        font-size: 13pt;
        line-height: 1.6;
        color: var(--text-dark);
        background: var(--vanilla-bg);
        margin: 0;
        padding: 0;
        max-width: 800px;
        margin: 0 auto;
    }}
    
    .page {{
        min-height: 85vh;
        padding: 2cm 2.5cm;
        margin-bottom: 1cm;
        page-break-after: always;
        background: var(--warm-white);
        box-shadow: 0 4px 20px var(--shadow-soft);
        border-radius: 6px;
        border: 1px solid rgba(212, 175, 140, 0.1);
    }}
    
    .page:last-child {{
        page-break-after: auto;
    }}
    
    h1 {{
        font-family: 'Playfair Display', serif;
        font-size: 28pt;
        text-align: center;
        margin: 2cm 0 1.5cm 0;
        color: var(--text-dark);
        font-weight: 500;
        letter-spacing: 1px;
    }}
    
    h2 {{
        font-family: 'Playfair Display', serif;
        font-size: 20pt;
        color: var(--text-dark);
        margin: 2cm 0 1cm 0;
        font-weight: 500;
        border-bottom: 2px solid var(--accent-warm);
        padding-bottom: 0.3cm;
    }}
    
    .chapter-number {{
        font-family: 'Libre Baskerville', serif;
        font-size: 11pt;
        color: var(--text-light);
        text-align: center;
        margin-bottom: 0.8cm;
        font-style: italic;
        text-transform: uppercase;
        letter-spacing: 2px;
    }}
    
    /* –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –∞–±–∑–∞—Ü–µ–≤ */
    p {{
        margin: 0 0 1.2em 0;
        text-align: justify;
        text-indent: 1.5em;
        line-height: 1.7;
    }}
    
    .first-paragraph {{
        text-indent: 0;
        font-size: 14pt;
        font-weight: 500;
    }}
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –º–µ—Ç–∞—Ñ–æ—Ä –≤–º–µ—Å—Ç–æ —Å—É—Ö–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */
    .metaphor-box {{
        margin: 1.5cm 0;
        text-align: center;
        font-family: 'Libre Baskerville', serif;
        padding: 1.5em;
        background: var(--cream-bg);
        border-radius: 12px;
        border: 1px solid rgba(212, 175, 140, 0.2);
        font-style: italic;
        color: var(--text-medium);
    }}
    
    .metaphor-box h3 {{
        margin-top: 0;
        color: var(--accent-warm);
        font-size: 16pt;
        font-style: normal;
    }}
    
    /* –ò–Ω—Ñ–æ–±–æ–∫—Å –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–≤—ã–Ω–æ—Å–Ω–æ–π) */
    .info-sidebar {{
        position: absolute;
        right: -200px;
        top: 2cm;
        width: 180px;
        padding: 1em;
        background: var(--soft-beige);
        border-radius: 8px;
        font-size: 10pt;
        color: var(--text-light);
        border-left: 3px solid var(--accent-warm);
    }}
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∂–∏–≤—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ */
    .dialogue {{
        font-style: italic;
        color: var(--text-medium);
        text-indent: 0;
        margin: 1em 0;
        padding-left: 2em;
        border-left: 2px solid var(--accent-warm);
        padding-left: 1em;
    }}
    
    .dialogue::before {{
        content: "‚Äî ";
        font-weight: bold;
        color: var(--accent-warm);
    }}
    
    .inner-thought {{
        font-style: italic;
        color: var(--text-medium);
        text-align: center;
        margin: 1.5em 0;
        padding: 1em;
        background: var(--cream-bg);
        border-radius: 8px;
        text-indent: 0;
    }}
    
    .photo-container {{
        margin: 2cm 0;
        text-align: center;
        page-break-inside: avoid;
    }}
    
    .photo-frame {{
        display: inline-block;
        padding: 15px;
        background: var(--warm-white);
        border-radius: 12px;
        box-shadow: 0 6px 25px var(--shadow-soft);
        border: 1px solid rgba(212, 175, 140, 0.15);
    }}
    
    .photo-frame img {{
        max-width: 100%;
        max-height: 450px;
        border-radius: 8px;
        border: 2px solid var(--warm-white);
    }}
    
    .photo-caption {{
        font-family: 'Libre Baskerville', serif;
        font-style: italic;
        font-size: 11pt;
        color: var(--text-medium);
        margin-top: 1cm;
        text-align: center;
    }}
    
    .photo-story {{
        margin-top: 0.8cm;
        padding: 1.2em;
        background: var(--soft-beige);
        border-radius: 8px;
        font-size: 11pt;
        color: var(--text-medium);
        border-left: 3px solid var(--accent-warm);
        text-align: left;
        white-space: pre-line;
    }}
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ —Ñ–æ—Ç–æ */
    .photo-detective {{
        border-left-color: #e74c3c;
    }}
    
    .photo-monologue {{
        border-left-color: #3498db;
    }}
    
    .photo-dialogue {{
        border-left-color: #2ecc71;
    }}
    
    @media print {{
        body {{ margin: 0; background: white; }}
        .page {{ box-shadow: none; border: none; }}
        .info-sidebar {{ display: none; }}
    }}
    </style>
</head>
<body>

<!-- –û–ë–õ–û–ñ–ö–ê -->
<div class="page">
    <h1>{content.get('title', f'–ò—Å—Ç–æ—Ä–∏—è @{username}')}</h1>
    
    <div style="text-align: center; margin: 3cm 0; font-style: italic; color: var(--text-medium);">
        –î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ø–æ–≤–µ—Å—Ç—å<br>
        {valid_photo_count} –∫–∞–¥—Ä–æ–≤ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏—è
    </div>
    
    <div class="metaphor-box">
        <h3>@{username}</h3>
        <p style="margin: 0; text-indent: 0;">{followers_metaphor}</p>
        <p style="margin: 0.5em 0 0 0; text-indent: 0; font-size: 11pt;">{posts_metaphor}</p>
        {f'<p style="margin: 1em 0 0 0; text-indent: 0; font-size: 10pt; font-style: normal;">¬´{bio}¬ª</p>' if bio else ''}
    </div>
    
    <!-- –í—ã–Ω–æ—Å–Ω–æ–π –∏–Ω—Ñ–æ–±–æ–∫—Å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π -->
    <div class="info-sidebar">
        <strong>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞:</strong><br>
        –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {followers:,}<br>
        –ü–æ—Å—Ç—ã: {posts_count}<br>
        {f'–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {"–î–∞" if verified else "–ù–µ—Ç"}<br>' if verified else ''}
        –ê–Ω–∞–ª–∏–∑: {valid_photo_count} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    </div>
    
    <div style="position: absolute; bottom: 2cm; left: 50%; transform: translateX(-50%); text-align: center;">
        <p style="font-size: 10pt; color: var(--text-light); margin: 0;">
            {full_name if full_name != username else username}
        </p>
    </div>
</div>

<!-- 1. –í–°–¢–†–ï–ß–ê -->
<div class="page">
    <div class="chapter-number">–ì–ª–∞–≤–∞ –ø–µ—Ä–≤–∞—è</div>
    <h2>–í—Å—Ç—Ä–µ—á–∞</h2>
    
    <div style="white-space: pre-line; line-height: 1.7;">
        {content.get('prologue', f'–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É—é, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å, –∫–∞–∫ —Å–ª—É—á–∞–π–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏–ª —Ç–∞–ª–∞–Ω—Ç.\n\n@{username} –ø–æ–ø–∞–ª—Å—è –≤ –ª–µ–Ω—Ç–µ —Å–ª—É—á–∞–π–Ω–æ.\n\n{followers_metaphor} ‚Äî –Ω–æ –¥–µ–ª–æ –Ω–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö.')}
    </div>
</div>"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –í–ê–†–ò–ê–¢–ò–í–ù–´–ú –∞–Ω–∞–ª–∏–∑–æ–º
    photo_styles = ['detective', 'monologue', 'dialogue']
    for i, img_base64 in enumerate(processed_images):
        caption = real_captions[i] if i < len(real_captions) else f'–ö–∞–¥—Ä {i+1}'
        photo_analysis = photo_stories[i] if i < len(photo_stories) else "–í—Ä–µ–º—è –∑–∞–º–µ—Ä–ª–æ –≤ —ç—Ç–æ–º –∫–∞–¥—Ä–µ."
        style_class = photo_styles[i % 3]
        style_name = ['–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞', '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–æ–Ω–æ–ª–æ–≥', '–î–∏–∞–ª–æ–≥'][i % 3]
        
        html += f"""

<div class="page">
    <div class="photo-container">
        <div class="photo-frame">
            <img src="{img_base64}" alt="–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è {i+1}">
        </div>
        
        <div class="photo-caption">
            ¬´{caption}¬ª
        </div>
        
        <div class="photo-story photo-{style_class}">
            <small style="color: var(--text-light); font-style: normal;">{style_name}:</small>
            
            {photo_analysis}
        </div>
    </div>
</div>"""
    
    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–ª–∞–≤—ã —Å —á–µ—Ç–∫–∏–º —Ñ–æ–∫—É—Å–æ–º
    html += f"""

<!-- 2. –ö–û–ù–§–õ–ò–ö–¢ -->
<div class="page">
    <div class="chapter-number">–ì–ª–∞–≤–∞ –≤—Ç–æ—Ä–∞—è</div>
    <h2>–¢–∞–π–Ω–∞</h2>
    
    <div style="white-space: pre-line; line-height: 1.7;">
        {content.get('emotions', f'¬´{real_captions[0] if real_captions else "–í—Å–µ —Ö–æ—Ä–æ—à–æ"}¬ª ‚Äî –Ω–∞–ø–∏—Å–∞–Ω–æ –ø–æ–¥ —Ñ–æ—Ç–æ.\n\n–ù–æ –≥–ª–∞–∑–∞ –≥–æ–≤–æ—Ä—è—Ç –¥—Ä—É–≥–æ–µ.\n\n–í —É–≥–æ–ª–∫–∞—Ö —Ä—Ç–∞ –ø—Ä—è—á–µ—Ç—Å—è —É—Å—Ç–∞–ª–æ—Å—Ç—å.')}
    </div>
</div>

<!-- 3. –ü–û–í–û–†–û–¢ -->
<div class="page">
    <div class="chapter-number">–ì–ª–∞–≤–∞ —Ç—Ä–µ—Ç—å—è</div>
    <h2>–û–∑–∞—Ä–µ–Ω–∏–µ</h2>
    
    <div style="white-space: pre-line; line-height: 1.7;">
        {content.get('places', f'–ö–∞–¥—Ä –∏–∑ {locations[0] if locations else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–∞"} –∏–∑–º–µ–Ω–∏–ª –≤—Å–µ.\n\n–ó–¥–µ—Å—å –ø–∞—Ö–ª–æ –¥–æ–∂–¥–µ–º –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å—é.\n\n–í–ø–µ—Ä–≤—ã–µ –∑–∞ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è ‚Äî –Ω–∞—Å—Ç–æ—è—â–∞—è —É–ª—ã–±–∫–∞.')}
    </div>
</div>

<!-- 4. –†–ê–ó–†–ï–®–ï–ù–ò–ï -->
<div class="page">
    <div class="chapter-number">–ì–ª–∞–≤–∞ —á–µ—Ç–≤–µ—Ä—Ç–∞—è</div>
    <h2>–û—Ç–∫–ª–∏–∫</h2>
    
    <div style="white-space: pre-line; line-height: 1.7;">
        {content.get('community', f'{followers_metaphor} –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n¬´–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç—ã –ø–æ–∫–∞–∑–∞–ª —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ¬ª ‚Äî –ø–∏—à–µ—Ç –ø–æ–¥—Ä—É–≥–∞.\n\n¬´–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å¬ª ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü.')}
    </div>
</div>

<!-- 5. –§–ò–ù–ê–õ -->
<div class="page">
    <div class="chapter-number">–≠–ø–∏–ª–æ–≥</div>
    <h2>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</h2>
    
    <div style="white-space: pre-line; line-height: 1.7;">
        {content.get('legacy', f'–ß—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤–∞–∂–Ω–æ–≥–æ?\n\n–ù–µ –ª–∞–π–∫–∏. –ù–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.\n\n–ú–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ —Ä–µ—à–∏–ª—Å—è –±—ã—Ç—å —Å–æ–±–æ–π.\n\n–Ø –ª–∏—Å—Ç–∞—é –ª–µ–Ω—Ç—É –≤ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ–≥–æ –¥–∏–∫–æ–≥–æ —Ü–≤–µ—Ç–∫–∞. –ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?')}
    </div>
    
    <div style="text-align: center; margin-top: 3cm; font-style: italic; color: var(--text-medium);">
        –ö–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏.<br>
        <small>–ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π.</small>
    </div>
</div>

</body>
</html>"""
    
    return html

def create_zine_html(content: dict, analysis: dict, images: list[Path]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç –º–æ–∑–∞–∏—á–Ω—É—é HTML –∫–Ω–∏–≥—É —Å –∫–æ–ª–ª–∞–∂–∞–º–∏ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = analysis.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
    full_name = analysis.get('full_name', username)
    followers = analysis.get('followers', 0)
    posts_count = analysis.get('posts_count', 0)
    bio = analysis.get('bio', '')
    verified = analysis.get('verified', False)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 15 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–ª–ª–∞–∂–∞
    processed_images = []
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 15 —Ñ–æ—Ç–æ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    limited_images = images[:15]
    print(f"üé® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {len(limited_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –º–æ–∑–∞–∏—á–Ω–æ–≥–æ –∫–æ–ª–ª–∞–∂–∞")
    
    for i, img_path in enumerate(limited_images):
        if img_path.exists():
            try:
                with Image.open(img_path) as img:
                    if img.mode != 'RGB':
                        img = img.convert('RGB')
                    
                    # –î–ª—è –∫–æ–ª–ª–∞–∂–∞ - –º–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä
                    max_size = (300, 300)
                    img.thumbnail(max_size, Image.Resampling.LANCZOS)
                    
                    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
                    enhancer = ImageEnhance.Contrast(img)
                    img = enhancer.enhance(1.03)
                    
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
                    buffer = BytesIO()
                    img.save(buffer, format='JPEG', quality=85)
                    img_str = base64.b64encode(buffer.getvalue()).decode()
                    
                    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–æ—Ç–æ
                    card_types = ["micro", "trigger", "sms"]
                    card_type = card_types[i % 3]
                    card_content = analyze_photo_for_card(img_path, f"@{username}", card_type)
                    
                    processed_images.append({
                        'data': f"data:image/jpeg;base64,{img_str}",
                        'rotation': random.uniform(-3, 3),  # –°–ª—É—á–∞–π–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç
                        'size': random.choice(['small', 'medium', 'large']),
                        'card_content': card_content,
                        'card_type': card_type
                    })
                    
                    print(f"‚úÖ –§–æ—Ç–æ {i+1}/15 –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –∫–æ–ª–ª–∞–∂–∞")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path}: {e}")
    
    # –†–∞–Ω–¥–æ–º–∏–∑–∏—Ä—É–µ–º –ø–æ—Ä—è–¥–æ–∫ –¥–ª—è –º–æ–∑–∞–∏—á–Ω–æ—Å—Ç–∏
    random.shuffle(processed_images)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    real_captions = analysis.get('captions', ['–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏'])
    
    print(f"üéØ –°–æ–∑–¥–∞–µ–º –∑–∏–Ω —Å {len(processed_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏")
    
    # HTML —Å –º–æ–∑–∞–∏—á–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
    html = f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>{content.get('title', f'–ó–∏–Ω @{username}')}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&family=Playfair+Display:wght@400;500;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    
    <style>
    :root {{
        --paper: #fefcf8;
        --ink: #2a2a2a;
        --accent: #d4af8c;
        --shadow: rgba(0,0,0,0.1);
        --highlight: #fff9e6;
    }}
    
    * {{ box-sizing: border-box; }}
    
    body {{
        font-family: 'Crimson Text', serif;
        background: var(--paper);
        color: var(--ink);
        margin: 0;
        padding: 20px;
        line-height: 1.5;
        overflow-x: hidden;
    }}
    
    /* –ú–æ–∑–∞–∏—á–Ω–∞—è —Å–µ—Ç–∫–∞ –¥–ª—è –∫–æ–ª–ª–∞–∂–∞ */
    .moodboard {{
        position: relative;
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 15px;
        margin: 2rem 0;
        min-height: 400px;
    }}
    
    .tile {{
        position: relative;
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 4px 12px var(--shadow);
        transition: transform 0.3s ease;
        cursor: pointer;
    }}
    
    .tile.small {{ height: 140px; }}
    .tile.medium {{ height: 180px; }}
    .tile.large {{ height: 220px; grid-row: span 2; }}
    
    .tile:hover {{
        transform: scale(1.05) rotate(0deg) !important;
        z-index: 10;
    }}
    
    /* Overlay —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ–≤–µ—Ä—Ö –∫–æ–ª–ª–∞–∂–∞ */
    .overlay-quote {{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(254, 252, 248, 0.95);
        padding: 2rem 3rem;
        border-radius: 12px;
        box-shadow: 0 8px 32px var(--shadow);
        font-family: 'Playfair Display', serif;
        font-size: 1.4rem;
        text-align: center;
        max-width: 500px;
        border: 2px solid var(--accent);
        z-index: 5;
    }}
    
    /* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */
    .photo-card {{
        margin: 2rem 0;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        overflow: hidden;
        background: white;
        box-shadow: 0 4px 20px var(--shadow);
    }}
    
    .card-trigger {{
        width: 100%;
        padding: 0;
        border: none;
        background: none;
        cursor: pointer;
    }}
    
    .card-trigger img {{
        width: 100%;
        height: 200px;
        object-fit: cover;
        display: block;
    }}
    
    .card-content {{
        padding: 1.5rem;
        background: var(--highlight);
        border-top: 3px solid var(--accent);
    }}
    
    .card-type {{
        font-family: 'JetBrains Mono', monospace;
        font-size: 0.8rem;
        color: var(--accent);
        text-transform: uppercase;
        margin-bottom: 0.5rem;
        font-weight: 500;
    }}
    
    .card-text {{
        font-size: 1.1rem;
        line-height: 1.6;
        white-space: pre-line;
    }}
    
    /* SMS —Å—Ç–∏–ª—å –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ */
    .sms-style {{
        font-family: 'JetBrains Mono', monospace;
        background: #f0f0f0;
        padding: 1rem;
        border-radius: 8px;
        font-size: 0.95rem;
    }}
    
    /* –°—Ü–µ–Ω—ã –∫–Ω–∏–≥–∏ */
    .scene {{
        margin: 3rem 0;
        padding: 2rem;
        background: white;
        border-radius: 12px;
        box-shadow: 0 6px 24px var(--shadow);
        border-left: 5px solid var(--accent);
    }}
    
    .scene-title {{
        font-family: 'Playfair Display', serif;
        font-size: 1.8rem;
        margin-bottom: 1rem;
        color: var(--accent);
        text-transform: uppercase;
        letter-spacing: 1px;
    }}
    
    .scene-content {{
        font-size: 1.2rem;
        line-height: 1.7;
        white-space: pre-line;
    }}
    
    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
    h1 {{
        font-family: 'Playfair Display', serif;
        font-size: 3rem;
        text-align: center;
        margin: 2rem 0;
        color: var(--ink);
    }}
    
    .subtitle {{
        text-align: center;
        font-style: italic;
        color: #666;
        margin-bottom: 3rem;
    }}
    
    /* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ */
    .tech-info {{
        background: #f8f8f8;
        padding: 1rem;
        border-radius: 8px;
        font-family: 'JetBrains Mono', monospace;
        font-size: 0.9rem;
        margin: 2rem 0;
        border-left: 3px solid var(--accent);
    }}
    
    /* –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑—ã–≤ */
    .final-call {{
        text-align: center;
        padding: 3rem 2rem;
        background: linear-gradient(135deg, var(--highlight), var(--paper));
        border-radius: 12px;
        margin: 3rem 0;
        border: 2px solid var(--accent);
    }}
    
    .qr-placeholder {{
        width: 120px;
        height: 120px;
        background: var(--accent);
        margin: 1rem auto;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
    }}
    
    /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
    @media (max-width: 768px) {{
        .moodboard {{
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 10px;
        }}
        
        .tile {{ height: 120px; }}
        .tile.large {{ height: 160px; }}
        
        .overlay-quote {{
            padding: 1rem 1.5rem;
            font-size: 1.1rem;
        }}
        
        h1 {{ font-size: 2rem; }}
    }}
    
    /* –ü–µ—á–∞—Ç—å */
    @media print {{
        .photo-card {{ page-break-inside: avoid; }}
        .scene {{ page-break-inside: avoid; }}
        .moodboard {{ page-break-inside: avoid; }}
    }}
    </style>
</head>
<body>

<!-- –ó–ê–ì–û–õ–û–í–û–ö -->
<h1>–ó–∏–Ω @{username}</h1>
<div class="subtitle">
    –í–∏–∑—É–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ ‚Ä¢ {len(processed_images)} –∫–∞–¥—Ä–æ–≤ ‚Ä¢ 5 –º–∏–Ω—É—Ç —á—Ç–µ–Ω–∏—è
</div>

<!-- –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –°–ü–†–ê–í–ö–ê -->
<div class="tech-info">
    <strong>@{username}</strong> ‚Ä¢ {followers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Ä¢ {posts_count} –ø–æ—Å—Ç–æ–≤
    {f' ‚Ä¢ ‚úì –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω' if verified else ''}
    {f'<br>"{bio}"' if bio else ''}
    <br><small>–û—Ç–æ–±—Ä–∞–Ω–æ –ª—É—á—à–∏—Ö {len(processed_images)} –∏–∑ {len(images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</small>
</div>

<!-- –ú–£–î–ë–û–†–î-–ö–û–õ–õ–ê–ñ -->
<div class="moodboard">
    {chr(10).join([f'''
    <img src="{img['data']}" 
         class="tile {img['size']}" 
         style="transform: rotate({img['rotation']}deg)"
         alt="–ö–∞–¥—Ä {i+1}"
         onclick="showCard({i})">
    ''' for i, img in enumerate(processed_images)])}
    
    <div class="overlay-quote">
        ¬´{content.get('prologue', '–õ–∏—Å—Ç–∞—é –ª–µ–Ω—Ç—É –≤ –ø–æ–∏—Å–∫–µ –¥–∏–∫–æ–≥–æ —Ü–≤–µ—Ç–∫–∞. –ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?')}¬ª
    </div>
</div>

<!-- –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –ö–ê–†–¢–û–ß–ö–ò (—Å–∫—Ä—ã—Ç—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) -->
<div id="cards-section" style="display: none;">
    <h2 style="text-align: center; margin: 3rem 0 2rem 0;">–ò—Å—Ç–æ—Ä–∏–∏ –∑–∞ –∫–∞–¥—Ä–æ–º</h2>
    
    {chr(10).join([f'''
    <div class="photo-card" id="card-{i}">
        <button class="card-trigger" onclick="toggleCard({i})">
            <img src="{img['data']}" alt="–ö–∞–¥—Ä {i+1}">
        </button>
        <div class="card-content" style="display: none;">
            <div class="card-type">{img['card_type']}</div>
            <div class="card-text {'sms-style' if img['card_type'] == 'sms' else ''}">{img['card_content']}</div>
        </div>
    </div>
    ''' for i, img in enumerate(processed_images)])}
</div>

<!-- –î–†–ê–ú–ê–¢–£–†–ì–ò–ß–ï–°–ö–ò–ï –°–¶–ï–ù–´ -->
<div class="scene">
    <div class="scene-title">–ó–∞–≤—è–∑–∫–∞</div>
    <div class="scene-content">{content.get('prologue', '–ù–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Å–ª—É—á–∞–π–Ω–æ. –ß—Ç–æ-—Ç–æ –∑–∞—Ü–µ–ø–∏–ª–æ.')}</div>
</div>

<div class="scene">
    <div class="scene-title">–ö–æ–Ω—Ñ–ª–∏–∫—Ç</div>
    <div class="scene-content">{content.get('emotions', f'‚Äî {real_captions[0] if real_captions else "–í—Å–µ —Ö–æ—Ä–æ—à–æ"}\n‚Äî –ù–æ –≥–ª–∞–∑–∞ –≥–æ–≤–æ—Ä—è—Ç –¥—Ä—É–≥–æ–µ.')}</div>
</div>

<div class="scene">
    <div class="scene-title">–ü–æ–≤–æ—Ä–æ—Ç</div>
    <div class="scene-content">{content.get('places', '–û–¥–∏–Ω –∫–∞–¥—Ä –∏–∑–º–µ–Ω–∏–ª –≤—Å–µ. –ó–¥–µ—Å—å –ø–∞—Ö–ª–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å—é.')}</div>
</div>

<div class="scene">
    <div class="scene-title">–ö—É–ª—å–º–∏–Ω–∞—Ü–∏—è</div>
    <div class="scene-content">{content.get('community', f' –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n¬´–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç—ã –ø–æ–∫–∞–∑–∞–ª —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ\n‚Äî –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å')}</div>
</div>

<!-- –§–ò–ù–ê–õ–¨–ù–´–ô –ü–†–ò–ó–´–í -->
<div class="final-call">
    <div class="scene-title">–≠–ø–∏–ª–æ–≥</div>
    <div class="scene-content">{content.get('legacy', '–õ–∏—Å—Ç–∞—é –ª–µ–Ω—Ç—É –≤ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ–≥–æ –¥–∏–∫–æ–≥–æ —Ü–≤–µ—Ç–∫–∞. –ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?')}</div>
    
    <div class="qr-placeholder">
        QR ‚Üí @{username}
    </div>
    
    <p style="margin-top: 2rem; font-style: italic;">
        –°–æ–∑–¥–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é ‚Ä¢ –ö–∞–∂–¥–∞—è –∏—Å—Ç–æ—Ä–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–∞
    </p>
</div>

<script>
// –ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ü–∏—é —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
function showCard(index) {{
    const cardsSection = document.getElementById('cards-section');
    cardsSection.style.display = 'block';
    cardsSection.scrollIntoView({{ behavior: 'smooth' }});
    
    // –û—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
    setTimeout(() => {{
        toggleCard(index);
    }}, 500);
}}

// –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É
function toggleCard(index) {{
    const card = document.getElementById(`card-${{index}}`);
    const content = card.querySelector('.card-content');
    
    if (content.style.display === 'none') {{
        content.style.display = 'block';
        card.scrollIntoView({{ behavior: 'smooth', block: 'center' }});
    }} else {{
        content.style.display = 'none';
    }}
}}

// –†–∞–Ω–¥–æ–º–Ω—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {{
    const tiles = document.querySelectorAll('.tile');
    tiles.forEach((tile, index) => {{
        const rotation = (Math.random() - 0.5) * 6; // -3 –¥–æ +3 –≥—Ä–∞–¥—É—Å–æ–≤
        tile.style.transform = `rotate(${{rotation}}deg)`;
    }});
}});
</script>

</body>
</html>"""
    
    return html

def convert_image_to_base64(image_path: Path, max_size: tuple = (600, 400), style: str = "original") -> str:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64 —Å —á–∏—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–ª—è EPUB —Å—Ç–∏–ª—è"""
    try:
        if not image_path.exists():
            print(f"‚ùå –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
            return ""
            
        with Image.open(image_path) as img:
            print(f"üì∏ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path.name}")
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if img.mode != 'RGB':
                img = img.convert('RGB')
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
            img.thumbnail(max_size, Image.Resampling.LANCZOS)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —á–∏—Å—Ç—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è EPUB
            if style == "clean":
                # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —á–µ—Ç–∫–æ—Å—Ç–∏ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                enhancer = ImageEnhance.Contrast(img)
                img = enhancer.enhance(1.05)  # –õ–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
                enhancer = ImageEnhance.Sharpness(img)
                img = enhancer.enhance(1.1)   # –ù–µ–±–æ–ª—å—à–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–µ–∑–∫–æ—Å—Ç–∏
                enhancer = ImageEnhance.Color(img)
                img = enhancer.enhance(1.02)  # –û—á–µ–Ω—å –ª–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç–∏
                
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
            buffer = BytesIO()
            img.save(buffer, format='JPEG', quality=90, optimize=True)
            img_str = base64.b64encode(buffer.getvalue()).decode()
            print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {image_path.name} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è EPUB —Å—Ç–∏–ª—è")
            return f"data:image/jpeg;base64,{img_str}"
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {image_path}: {e}")
        return ""

def create_literary_instagram_book_html(content: dict, analysis: dict, images: list[Path]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç HTML Instagram-–∫–Ω–∏–≥—É –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ –≤ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–º —Å—Ç–∏–ª–µ —Å —ç–º–æ—Ü–∏—è–º–∏ –∏ –º–µ—Ç–∞—Ñ–æ—Ä–∞–º–∏"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = analysis.get('username', '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü')
    full_name = analysis.get('full_name', username)
    followers = analysis.get('followers', 0)
    following = analysis.get('following', 0)
    posts_count = analysis.get('posts_count', 0)
    bio = analysis.get('bio', '')
    
    # –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏ –∏ –¥–∞–Ω–Ω—ã–µ
    real_captions = analysis.get('captions', [])[:5]
    common_hashtags = analysis.get('common_hashtags', [])[:3]
    locations = analysis.get('locations', [])[:3]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ (8-10 —Ç—ã—Å—è—á)
    word_count = random.randint(8000, 10000)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    processed_images = []
    for i, img_path in enumerate(images[:5]):  # –ú–∞–∫—Å–∏–º—É–º 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è 5 –≥–ª–∞–≤
        if img_path.exists():
            try:
                with Image.open(img_path) as img:
                    if img.mode != 'RGB':
                        img = img.convert('RGB')
                    
                    # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è —á—Ç–µ–Ω–∏—è
                    max_size = (700, 500)
                    img.thumbnail(max_size, Image.Resampling.LANCZOS)
                    
                    # –õ–µ–≥–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
                    enhancer = ImageEnhance.Contrast(img)
                    img = enhancer.enhance(1.08)
                    
                    buffer = BytesIO()
                    img.save(buffer, format='JPEG', quality=92)
                    img_str = base64.b64encode(buffer.getvalue()).decode()
                    processed_images.append(f"data:image/jpeg;base64,{img_str}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path}: {e}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ (3-7 —Å–ª–æ–≤)
    title_options = [
        f"–ú–≥–Ω–æ–≤–µ–Ω–∏—è @{username}",
        f"–ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è",
        f"–ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫ –∏ –∫–∞–¥—Ä–æ–≤",
        f"–¶–∏—Ñ—Ä–æ–≤—ã–µ —Å–ª–µ–¥—ã –¥—É—à–∏",
        f"–î–Ω–µ–≤–Ω–∏–∫ –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞",
        f"–û—Å–∫–æ–ª–∫–∏ —á—É–∂–æ–π –∂–∏–∑–Ω–∏"
    ]
    book_title = random.choice(title_options)
    
    # –≠–ø–∏–≥—Ä–∞—Ñ (–º–∞–∫—Å–∏–º—É–º 15 —Å–ª–æ–≤)
    epigraphs = [
        "–ö–∞–∂–¥–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è ‚Äî –æ–∫–Ω–æ –≤ —á—å—é-—Ç–æ –¥—É—à—É",
        "–ó–∞ –∫–∞–∂–¥—ã–º –∫–∞–¥—Ä–æ–º –ø—Ä—è—á–µ—Ç—Å—è –∏—Å—Ç–æ—Ä–∏—è",
        "–ú—ã –ª–∏—Å—Ç–∞–µ–º –∂–∏–∑–Ω–∏, –Ω–µ –∑–∞–º–µ—á–∞—è –≥–ª—É–±–∏–Ω—ã",
        "–ö—Ä–∞—Å–æ—Ç–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –æ–±—ã–¥–µ–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö",
        "–ò–Ω–æ–≥–¥–∞ —á—É–∂–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≥–æ–≤–æ—Ä—è—Ç –æ –Ω–∞—Å"
    ]
    epigraph = random.choice(epigraphs)
    
    # HTML –≤ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–º —Å—Ç–∏–ª–µ
    html = f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{book_title}</title>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400;1,600&family=Playfair+Display:ital,wght@0,400;0,700;1,400;1,700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
    
    <style>
    :root {{
        --paper: #fefcf8;
        --ink: #2c2a26;
        --soft-ink: #5a5652;
        --accent: #b85450;
        --gold: #d4af8c;
        --shadow: rgba(60, 50, 40, 0.15);
    }}
    
    body {{
        font-family: 'Crimson Text', serif;
        background: var(--paper);
        color: var(--ink);
        line-height: 1.8;
        font-size: 16px;
        margin: 0;
        padding: 0;
        max-width: 800px;
        margin: 0 auto;
    }}
    
    .book-page {{
        min-height: 100vh;
        padding: 3cm 2.5cm;
        background: white;
        box-shadow: 0 8px 40px var(--shadow);
        margin: 20px auto;
        page-break-after: always;
        position: relative;
    }}
    
    .book-page:last-child {{
        page-break-after: auto;
    }}
    
    /* –û–±–ª–æ–∂–∫–∞ */
    .cover {{
        text-align: center;
        padding: 4cm 2cm;
        background: linear-gradient(135deg, var(--paper) 0%, #f7f4ed 100%);
        border: 1px solid rgba(212, 175, 140, 0.3);
    }}
    
    .cover-title {{
        font-family: 'Playfair Display', serif;
        font-size: 3rem;
        font-weight: 700;
        color: var(--ink);
        margin-bottom: 1rem;
        letter-spacing: -1px;
    }}
    
    .cover-subtitle {{
        font-family: 'Libre Baskerville', serif;
        font-style: italic;
        font-size: 1.2rem;
        color: var(--soft-ink);
        margin-bottom: 3rem;
    }}
    
    .cover-author {{
        font-size: 1.1rem;
        color: var(--soft-ink);
        margin-bottom: 4rem;
    }}
    
    .cover-epigraph {{
        font-style: italic;
        color: var(--soft-ink);
        border-top: 1px solid var(--gold);
        border-bottom: 1px solid var(--gold);
        padding: 2rem 0;
        max-width: 400px;
        margin: 0 auto;
        position: relative;
    }}
    
    .cover-epigraph::before {{
        content: '¬´';
        position: absolute;
        left: -20px;
        top: 1.5rem;
        font-size: 2rem;
        color: var(--accent);
    }}
    
    .cover-epigraph::after {{
        content: '¬ª';
        position: absolute;
        right: -20px;
        bottom: 1.5rem;
        font-size: 2rem;
        color: var(--accent);
    }}
    
    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≥–ª–∞–≤ */
    h1 {{
        font-family: 'Playfair Display', serif;
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--ink);
        margin: 3rem 0 1.5rem 0;
        text-align: left;
        border-bottom: 2px solid var(--gold);
        padding-bottom: 0.5rem;
    }}
    
    h2 {{
        font-family: 'Playfair Display', serif;
        font-size: 1.8rem;
        color: var(--accent);
        margin: 2.5rem 0 1.5rem 0;
        text-align: center;
    }}
    
    /* –≠–ø–∏–≥—Ä–∞—Ñ—ã –∫ –≥–ª–∞–≤–∞–º */
    .chapter-epigraph {{
        text-align: center;
        font-style: italic;
        color: var(--soft-ink);
        border-left: 3px solid var(--gold);
        padding-left: 2rem;
        margin: 2rem 0;
        background: #faf8f3;
        padding: 1.5rem;
        border-radius: 8px;
    }}
    
    /* –ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã */
    p {{
        text-align: justify;
        text-indent: 2rem;
        margin-bottom: 1.5rem;
        line-height: 1.8;
        font-size: 1.1rem;
    }}
    
    .first-paragraph {{
        text-indent: 0;
        font-weight: 500;
        font-size: 1.15rem;
    }}
    
    /* –î–∏–∞–ª–æ–≥–∏ */
    .dialogue {{
        font-style: italic;
        color: var(--soft-ink);
        text-indent: 0;
        margin: 1.5rem 0;
        padding-left: 2rem;
        border-left: 3px solid var(--accent);
        position: relative;
    }}
    
    .dialogue::before {{
        content: '‚Äî';
        position: absolute;
        left: -10px;
        color: var(--accent);
        font-weight: bold;
    }}
    
    /* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */
    .hero-img {{
        margin: 3rem 0;
        text-align: center;
        page-break-inside: avoid;
    }}
    
    .hero-img img {{
        max-width: 100%;
        max-height: 450px;
        border-radius: 12px;
        box-shadow: 0 12px 30px var(--shadow);
        border: 3px solid white;
    }}
    
    .hero-img figcaption {{
        font-family: 'Libre Baskerville', serif;
        font-style: italic;
        font-size: 1rem;
        color: var(--soft-ink);
        margin-top: 1rem;
        text-align: center;
    }}
    
    .hero-img figcaption::before {{
        content: '‚Äì ';
        color: var(--accent);
    }}
    
    /* –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º—ã—Å–ª–∏ */
    .inner-thought {{
        font-style: italic;
        text-align: center;
        color: var(--soft-ink);
        margin: 2rem 0;
        padding: 1.5rem;
        background: #f9f7f4;
        border-radius: 8px;
        text-indent: 0;
    }}
    
    /* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–Ω–∏–∑—É */
    .stats-footer {{
        margin-top: 4rem;
        padding-top: 2rem;
        border-top: 1px solid var(--gold);
        font-size: 0.9rem;
        color: var(--soft-ink);
        text-align: center;
        line-height: 1.5;
    }}
    
    /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
    @media (max-width: 768px) {{
        .book-page {{
            padding: 2cm 1.5cm;
            margin: 10px;
        }}
        
        .cover-title {{
            font-size: 2.2rem;
        }}
        
        h1 {{
            font-size: 1.8rem;
        }}
    }}
    
    @media print {{
        body {{
            background: white;
            margin: 0;
        }}
        
        .book-page {{
            box-shadow: none;
            margin: 0;
        }}
    }}
    </style>
</head>
<body>

<!-- –û–ë–õ–û–ñ–ö–ê -->
<div class="book-page cover">
    <h1 class="cover-title">{book_title}</h1>
    <p class="cover-subtitle">Instagram-–∏—Å—Ç–æ—Ä–∏—è –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞</p>
    <p class="cover-author">–ê–≤—Ç–æ—Ä: {full_name}</p>
    <div class="cover-epigraph">{epigraph}</div>
</div>

<!-- –ü–†–û–õ–û–ì -->
<div class="book-page">
    <h2>–ü—Ä–æ–ª–æ–≥</h2>
    
    <p class="first-paragraph">
        –Ø –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å @{username} —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Å–ª—É—á–∞–π–Ω–æ, –∫–∞–∫ –Ω–∞—Ç—ã–∫–∞—é—Ç—Å—è –Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã –≤ –ª–∞–±–∏—Ä–∏–Ω—Ç–µ —Å—Ç–∞—Ä–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ë—ã–ª–æ –æ–∫–æ–ª–æ {random.choice(['–ø–æ–ª—É–Ω–æ—á–∏', '–ø–æ–ª—É–¥–Ω—è', '–≤–µ—á–µ—Ä–∞'])}, –∏ —è –±–µ—Å—Ü–µ–ª—å–Ω–æ –ª–∏—Å—Ç–∞–ª –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –ª–µ–Ω—Ç—É, –∫–æ–≥–¥–∞ —Å—Ä–µ–¥–∏ –ø—Ä–∏–≤—ã—á–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ —Å–µ–ª—Ñ–∏ –∏ —Ä–µ–∫–ª–∞–º—ã –≤–¥—Ä—É–≥ –ø–æ—è–≤–∏–ª–æ—Å—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.
    </p>
    
    <p>
        {f'¬´{real_captions[0]}¬ª' if real_captions else '–ü–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±—ã–ª–∞ –ø—Ä–æ—Å—Ç–æ–π'} ‚Äî –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –ø–æ–¥ –æ–¥–Ω–∏–º –∏–∑ —Å–Ω–∏–º–∫–æ–≤. –ù–æ —á—Ç–æ-—Ç–æ –≤ —ç—Ç–∏—Ö —Å–ª–æ–≤–∞—Ö –∑–∞—Ü–µ–ø–∏–ª–æ –º–µ–Ω—è. –ú–æ–∂–µ—Ç –±—ã—Ç—å, —Ç–æ–Ω, –º–æ–∂–µ—Ç –±—ã—Ç—å, —á–µ—Å—Ç–Ω–æ—Å—Ç—å, –∞ –º–æ–∂–µ—Ç –±—ã—Ç—å, –ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–ª–æ—Å—Ç—å –æ—Ç —Ñ–∞–ª—å—à–∏–≤–æ–≥–æ –ø–æ–∑–∏—Ç–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–æ–ø–∏—Ç–∞–Ω—ã —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏.
    </p>
    
    <p>
        –ú–Ω–µ —Å—Ç–∞–ª–æ –ª—é–±–æ–ø—ã—Ç–Ω–æ. –ù–µ –ø—Ä–æ—Å—Ç–æ –ª—é–±–æ–ø—ã—Ç–Ω–æ, –∞ –∫–∞–∫-—Ç–æ —Ç—Ä–µ–≤–æ–∂–Ω–æ-–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ –±—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—à—å –∫–Ω–∏–≥—É –±–µ–∑ –æ–±–ª–æ–∂–∫–∏ –∏ –Ω–µ –∑–Ω–∞–µ—à—å, —Å—Ç–æ–∏—Ç –ª–∏ –µ—ë –æ—Ç–∫—Ä—ã–≤–∞—Ç—å. –Ø –∫–ª–∏–∫–Ω—É–ª –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª, –∫–∞–∫ —á—Ç–æ-—Ç–æ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—è –∑–∞–º–∏—Ä–∞–µ—Ç. –ó–¥–µ—Å—å –±—ã–ª–∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π ‚Äî –∑–¥–µ—Å—å –±—ã–ª–∞ —á—å—è-—Ç–æ –∂–∏–∑–Ω—å, —Ä–∞–∑–ª–æ–∂–µ–Ω–Ω–∞—è –ø–æ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∞–º.
    </p>
</div>

<!-- –ì–õ–ê–í–ê 1 -->
<div class="book-page">
    <h1>–ì–ª–∞–≤–∞ 1. –ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ</h1>
    
    <div class="chapter-epigraph">
        ¬´–ò–Ω–æ–≥–¥–∞ –æ–¥–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å—Ç–æ–∏—Ç —Ç—ã—Å—è—á–∏ –≤—Å—Ç—Ä–µ—á¬ª
    </div>
    
    <p class="first-paragraph">
        {followers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤. –≠—Ç–æ –ø–µ—Ä–≤–æ–µ, —á—Ç–æ –±—Ä–æ—Å–∏–ª–æ—Å—å –º–Ω–µ –≤ –≥–ª–∞–∑–∞. –ù–µ –º–∞–ª–µ–Ω—å–∫–∞—è —Ü–∏—Ñ—Ä–∞, –Ω–æ –∏ –Ω–µ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å ‚Äî –∑–¥–µ—Å—å –µ—Å—Ç—å —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ, –Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –ø–æ—Ç–µ—Ä—è—Ç—å —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å –∑–∞ —Å—Ç–µ–Ω–æ–π –∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç–∏.
    </p>
    
    <p>
        –Ø –Ω–∞—á–∞–ª –ª–∏—Å—Ç–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑, –∫–∞–∫ —á–∏—Ç–∞—é—Ç –∫–Ω–∏–≥—É, –∏ –∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –∫–∞–¥—Ä –±—ã–ª –∫–∞–∫ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–Ω–µ —Ä–æ–º–∞–Ω–∞. {f'–í –±–∏–æ –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞–Ω–æ: ¬´{bio}¬ª' if bio else '–ë–∏–æ –±—ã–ª–æ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º, –ø–æ—á—Ç–∏ –ø—É—Å—Ç—ã–º'} ‚Äî –∏ —ç—Ç–æ —Ç–æ–∂–µ –≥–æ–≤–æ—Ä–∏–ª–æ –æ —á—ë–º-—Ç–æ. –û –Ω–µ–∂–µ–ª–∞–Ω–∏–∏ –æ–±—ä—è—Å–Ω—è—Ç—å —Å–µ–±—è –≤ –¥–≤—É—Ö —Å–ª–æ–≤–∞—Ö, –æ –ø–æ–Ω–∏–º–∞–Ω–∏–∏ —Ç–æ–≥–æ, —á—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –Ω–µ –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö –ø—Ä–æ—Ñ–∏–ª—è.
    </p>
    
    <p>
        –°—Ç–∏–ª—å —Å—ä—ë–º–∫–∏ —Å—Ä–∞–∑—É –≤—ã–¥–∞–≤–∞–ª —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–µ—Ç –µ–¥—É –∏ –∑–∞–∫–∞—Ç—ã. –ó–¥–µ—Å—å –±—ã–ª –≤–∑–≥–ª—è–¥. –ó–¥–µ—Å—å –±—ã–ª–∞ –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–π–º–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, —Ç–æ—Ç –Ω–µ—É–ª–æ–≤–∏–º—ã–π –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –æ–±—ã–¥–µ–Ω–Ω–æ—Å—Ç—å –≤–¥—Ä—É–≥ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏—Å–∫—É—Å—Å—Ç–≤–æ–º.
    </p>
    
    {'<figure class="hero-img"><img src="' + processed_images[0] + '" alt="' + (real_captions[0][:50] if real_captions else '–ú–æ–º–µ–Ω—Ç –∂–∏–∑–Ω–∏') + '"><figcaption>' + (real_captions[0] if real_captions else '–ö–∞–¥—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–Ω–æ–≤–∏–ª –≤—Ä–µ–º—è') + '</figcaption></figure>' if processed_images else ''}
    
    <p>
        –Ø –ø–æ–Ω—è–ª, —á—Ç–æ –ø–µ—Ä–µ–¥–æ –º–Ω–æ–π –Ω–µ –ø—Ä–æ—Å—Ç–æ Instagram-–∞–∫–∫–∞—É–Ω—Ç, –∞ –≤–∏–∑—É–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫. –ö–∞–∂–¥–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –±—ã–ª–∞ –∑–∞–ø–∏—Å—å—é, –∫–∞–∂–¥–∞—è –ø–æ–¥–ø–∏—Å—å ‚Äî —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ–º, –∫–∞–∂–¥—ã–π —Ö—ç—à—Ç–µ–≥ ‚Äî –ø–æ–ø—ã—Ç–∫–æ–π –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –≤ –æ–≥—Ä–æ–º–Ω–æ–º —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ.
    </p>
    
    <div class="dialogue">
        –ö—Ç–æ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫? –ß—Ç–æ –µ–≥–æ –≤–æ–ª–Ω—É–µ—Ç? –û —á—ë–º –æ–Ω –º–µ—á—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è —É—Ç—Ä–æ–º?
    </div>
    
    <p>
        –≠—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞—á–∞–ª–∏ —Ä–æ–∏—Ç—å—Å—è –≤ –º–æ–µ–π –≥–æ–ª–æ–≤–µ, –∫–∞–∫ –ø—á—ë–ª—ã –≤ —É–ª—å–µ. –ò —è –ø–æ–Ω—è–ª, —á—Ç–æ –ø–æ–ø–∞–ª. –ü–æ–ø–∞–ª –≤ —Ç—É —Ä–µ–¥–∫—É—é –ª–æ–≤—É—à–∫—É –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é —Ç–∞–∫ —Å–ª–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –º–∏—Ä–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —ç–º–æ—Ü–∏–π –∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è.
    </p>
    
    <p>
        –Ø –ø—Ä–æ–¥–æ–ª–∂–∞–ª –ª–∏—Å—Ç–∞—Ç—å, –∏ —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø–æ—Å—Ç–æ–º —á—É–≤—Å—Ç–≤–æ–≤–∞–ª, –∫–∞–∫ –º–æ—ë –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –Ω–µ–∑–Ω–∞–∫–æ–º–æ–º —á–µ–ª–æ–≤–µ–∫–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤—Å—ë –±–æ–ª–µ–µ –æ–±—ä—ë–º–Ω—ã–º, –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω—ã–º. {f'–õ–æ–∫–∞—Ü–∏–∏ –≤–∞—Ä—å–∏—Ä–æ–≤–∞–ª–∏—Å—å –æ—Ç {locations[0] if locations else "–¥–æ–º–∞—à–Ω–∏—Ö —É–≥–ª–æ–≤"} –¥–æ {locations[1] if len(locations) > 1 else "–≥–æ—Ä–æ–¥—Å–∫–∏—Ö —É–ª–∏—Ü"}' if locations else '–ú–µ—Å—Ç–∞ —Å—ä—ë–º–æ–∫ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª–∏ —Å–≤–æ–∏ –∏—Å—Ç–æ—Ä–∏–∏'} ‚Äî –≥–µ–æ–≥—Ä–∞—Ñ–∏—è –¥—É—à–∏, —Ä–∞–∑–ª–æ–∂–µ–Ω–Ω–∞—è –ø–æ –∫–∞—Ä—Ç–µ –ó–µ–º–ª–∏.
    </p>
    
    <p>
        –ò —Ç–æ–≥–¥–∞ —è –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–∑–º–µ–Ω–∏–ª–æ –≤–µ—Å—å –º–æ–π –≤–µ—á–µ—Ä. –Ø —Ä–µ—à–∏–ª –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å, –∞ –∏–∑—É—á–∏—Ç—å –µ–≥–æ. –ü–æ–Ω—è—Ç—å. –ü–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å. –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–ª, –Ω–æ –∫–æ—Ç–æ—Ä—ã–π –≤–¥—Ä—É–≥ —Å—Ç–∞–ª –º–Ω–µ –±–ª–∏–∑–æ–∫ —á–µ—Ä–µ–∑ —ç–∫—Ä–∞–Ω —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞.
    </p>
</div>

<!-- –ì–õ–ê–í–ê 2 -->
<div class="book-page">
    <h1>–ì–ª–∞–≤–∞ 2. –£–≥–ª—É–±–ª—è—è—Å—å –≤ –¥–µ—Ç–∞–ª–∏</h1>
    
    <div class="chapter-epigraph">
        ¬´–î—å—è–≤–æ–ª –∫—Ä–æ–µ—Ç—Å—è –≤ –¥–µ—Ç–∞–ª—è—Ö, –∞ –∫—Ä–∞—Å–æ—Ç–∞ ‚Äî –≤ –º–µ–ª–æ—á–∞—Ö¬ª
    </div>
    
    <p class="first-paragraph">
        –ß–µ–º –¥–æ–ª—å—à–µ —è –∏–∑—É—á–∞–ª –ø—Ä–æ—Ñ–∏–ª—å @{username}, —Ç–µ–º –±–æ–ª—å—à–µ –ø–æ–Ω–∏–º–∞–ª, —á—Ç–æ –∏–º–µ—é –¥–µ–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å. –ó–¥–µ—Å—å –±—ã–ª–∞ —Å–∏—Å—Ç–µ–º–∞, —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è, –æ—Å–æ–±—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä.
    </p>
    
    <p>
        {f'–•—ç—à—Ç–µ–≥–∏ {common_hashtags[0][0] if common_hashtags else "#life"}, {common_hashtags[1][0] if len(common_hashtags) > 1 else "#moment"}, {common_hashtags[2][0] if len(common_hashtags) > 2 else "#beauty"}' if common_hashtags else '–•—ç—à—Ç–µ–≥–∏ –±—ã–ª–∏ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω—ã'} ‚Äî –Ω–µ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –æ—Ö–≤–∞—Ç–∞, –∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥—É—à. –≠—Ç–æ –±—ã–ª–∏ –Ω–µ –∫—Ä–∏—á–∞—â–∏–µ –ø—Ä–∏–∑—ã–≤—ã –∫ –≤–Ω–∏–º–∞–Ω–∏—é, –∞ —Ç–∏—Ö–∏–µ –º–∞—è–∫–∏ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç.
    </p>
    
    <p>
        –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Ç–æ–∂–µ –≥–æ–≤–æ—Ä–∏–ª–æ –æ –º–Ω–æ–≥–æ–º. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –ø–æ—è–≤–ª—è–ª–∏—Å—å –ª–∏–±–æ —Ä–∞–Ω–æ —É—Ç—Ä–æ–º, –ª–∏–±–æ –ø–æ–∑–¥–Ω–æ –≤–µ—á–µ—Ä–æ–º. –í—Ä–µ–º—è, –∫–æ–≥–¥–∞ –≥–æ—Ä–æ–¥ –µ—â—ë —Å–ø–∏—Ç –∏–ª–∏ —É–∂–µ –∑–∞—Å—ã–ø–∞–µ—Ç, –∫–æ–≥–¥–∞ —Å—É–µ—Ç–∞ —Å—Ç–∏—Ö–∞–µ—Ç –∏ –º–æ–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞–µ–¥–∏–Ω–µ —Å —Å–æ–±–æ–π –∏ —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏.
    </p>
    
    {'<figure class="hero-img"><img src="' + processed_images[1] + '" alt="' + (real_captions[1][:50] if len(real_captions) > 1 else '–¢–∏—Ö–∏–π –º–æ–º–µ–Ω—Ç') + '"><figcaption>' + (real_captions[1] if len(real_captions) > 1 else '–í —ç—Ç–æ–π —Ç–∏—à–∏–Ω–µ —Ä–æ–¥–∏–ª–∞—Å—å –º—ã—Å–ª—å') + '</figcaption></figure>' if len(processed_images) > 1 else ''}
    
    <p>
        –Ø –Ω–∞—á–∞–ª –∑–∞–º–µ—á–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –º–æ—Ç–∏–≤—ã. –û–∫–Ω–∞ ‚Äî –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–∫–æ–Ω –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö. –û—Ç—Ä–∞–∂–µ–Ω–∏—è ‚Äî –≤ –≤–∏—Ç—Ä–∏–Ω–∞—Ö, –ª—É–∂–∞—Ö, –≥–ª–∞–∑–∞—Ö. –¢–µ–Ω–∏ ‚Äî –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏–π. –≠—Ç–æ –±—ã–ª –≤–∏–∑—É–∞–ª—å–Ω—ã–π —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π @{username} —Å–æ–∑–¥–∞–≤–∞–ª –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –∏–ª–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ.
    </p>
    
    <div class="inner-thought">
        –ê –º–æ–∂–µ—Ç –±—ã—Ç—å, –º—ã –≤—Å–µ –≥–æ–≤–æ—Ä–∏–º –Ω–∞ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ –∫—Ä–∞—Å–æ—Ç—ã, –ø—Ä–æ—Å—Ç–æ –Ω–µ –≤—Å–µ–≥–¥–∞ —É–º–µ–µ–º –µ–≥–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å?
    </div>
    
    <p>
        –ü–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º –±—ã–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–º –º–∏—Ä–æ–º. –ù–∏–∫–∞–∫–∏—Ö –¥–ª–∏–Ω–Ω—ã—Ö —ç—Å—Å–µ, –Ω–∏–∫–∞–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ –æ–±—ä—è—Å–Ω–∏—Ç—å –æ—á–µ–≤–∏–¥–Ω–æ–µ. {f'¬´{real_captions[2] if len(real_captions) > 2 else "–ñ–∏–∑–Ω—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞"}¬ª' if real_captions else '–ö–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã'} ‚Äî –∏ –≤—Å—ë. –ù–æ –≤ —ç—Ç–æ–π –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –±—ã–ª–∞ –≥–ª—É–±–∏–Ω–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–µ –∫–∞–∂–¥—ã–π —Å—É–º–µ–µ—Ç —Ä–∞–∑–≥–ª—è–¥–µ—Ç—å.
    </p>
    
    <p>
        –Ø –ø–æ–Ω—è–ª, —á—Ç–æ @{username} –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –Ω–∏–∫–æ–≥–æ —É–¥–∏–≤–∏—Ç—å –∏–ª–∏ –≤–ø–µ—á–∞—Ç–ª–∏—Ç—å. –≠—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –≤–≥–ª—è–¥–µ—Ç—å—Å—è, –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å. –≠—Ç–æ –Ω–µ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è ‚Äî —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∫ –¥–∏–∞–ª–æ–≥—É —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –¥—É—à–æ–π.
    </p>
    
    <div class="dialogue">
        –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—É–≤—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–≤—Ç–æ—Ä, —á—Ç–æ –∫—Ç–æ-—Ç–æ —Ç–∞–∫ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∞–µ—Ç –µ–≥–æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ?
    </div>
    
    <p>
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –ø–æ–¥ –ø–æ—Å—Ç–∞–º–∏ –∫–æ–ª–µ–±–∞–ª–æ—Å—å, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–º. –≠—Ç–æ –≥–æ–≤–æ—Ä–∏–ª–æ –æ —Ç–æ–º, —á—Ç–æ —É @{username} –µ—Å—Ç—å —Å–≤–æ—è –∞—É–¥–∏—Ç–æ—Ä–∏—è ‚Äî –Ω–µ–±–æ–ª—å—à–∞—è, –Ω–æ –≤–µ—Ä–Ω–∞—è. –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∏–º–∞—é—Ç –∏ —Ü–µ–Ω—è—Ç —ç—Ç–æ—Ç –æ—Å–æ–±—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä.
    </p>
    
    <p>
        –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –±—ã–ª–∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º–∏, –Ω–æ —Ç—ë–ø–ª—ã–º–∏. –ù–∏–∫–∞–∫–∏—Ö –¥–µ–∂—É—Ä–Ω—ã—Ö ¬´–∫—Ä—É—Ç–æ!¬ª –∏–ª–∏ ¬´–∫—Ä–∞—Å–∏–≤–æ!¬ª. –ó–¥–µ—Å—å –ø–∏—Å–∞–ª–∏ –æ—Ç —Å–µ—Ä–¥—Ü–∞, –¥–µ–ª–∏–ª–∏—Å—å —Å–≤–æ–∏–º–∏ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è–º–∏, –±–ª–∞–≥–æ–¥–∞—Ä–∏–ª–∏ –∑–∞ –º–æ–º–µ–Ω—Ç –∫—Ä–∞—Å–æ—Ç—ã –≤ —Å—É–µ—Ç–Ω–æ–º –¥–Ω–µ.
    </p>
</div>

<!-- –ì–õ–ê–í–ê 3 -->
<div class="book-page">
    <h1>–ì–ª–∞–≤–∞ 3. –¢–æ—á–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞</h1>
    
    <div class="chapter-epigraph">
        ¬´–ò–Ω–æ–≥–¥–∞ –æ–¥–∏–Ω –∫–∞–¥—Ä –º–µ–Ω—è–µ—Ç –≤—Å—ë –ø–æ–Ω–∏–º–∞–Ω–∏–µ¬ª
    </div>
    
    <p class="first-paragraph">
        –ê –ø–æ—Ç–æ–º —è —É–≤–∏–¥–µ–ª —Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –¢—É —Å–∞–º—É—é, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª–∞ –º–æ—ë –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è @{username} —Å –Ω–æ–≥ –Ω–∞ –≥–æ–ª–æ–≤—É. {f'–û–Ω–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ –≤ {locations[0] if locations else "–æ–±—ã—á–Ω–æ–º –º–µ—Å—Ç–µ"}' if locations else '–ú–µ—Å—Ç–æ —Å—ä—ë–º–∫–∏ –±—ã–ª–æ –ø—Ä–æ—Å—Ç—ã–º'}, –Ω–æ —á—Ç–æ-—Ç–æ –≤ –Ω–µ–π –±—ã–ª–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ.
    </p>
    
    <p>
        –ú–æ–∂–µ—Ç –±—ã—Ç—å, –¥–µ–ª–æ –±—ã–ª–æ –≤ –æ—Å–≤–µ—â–µ–Ω–∏–∏ ‚Äî –º—è–≥–∫–æ–º, —Ä–∞—Å—Å–µ—è–Ω–Ω–æ–º, —Å–ª–æ–≤–Ω–æ –º–∏—Ä —Ä–µ—à–∏–ª –Ω–∞ –º–∏–Ω—É—Ç—É —Å—Ç–∞—Ç—å –¥–æ–±—Ä–µ–µ. –ê –º–æ–∂–µ—Ç –±—ã—Ç—å, –≤ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ–π, –Ω–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ–π, —á—Ç–æ —Ö–æ—Ç–µ–ª–æ—Å—å —Å–º–æ—Ç—Ä–µ—Ç—å –∏ —Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞—Ö–æ–¥—è –≤—Å—ë –Ω–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏.
    </p>
    
    {'<figure class="hero-img"><img src="' + processed_images[2] + '" alt="' + (real_captions[2][:50] if len(real_captions) > 2 else '–ü–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –º–æ–º–µ–Ω—Ç') + '"><figcaption>' + (real_captions[2] if len(real_captions) > 2 else '–ó–¥–µ—Å—å –≤—Å—ë –∏–∑–º–µ–Ω–∏–ª–æ—Å—å') + '</figcaption></figure>' if len(processed_images) > 2 else ''}
    
    <p>
        –ù–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –¥–µ–ª–æ –±—ã–ª–æ –≤ —Ç–æ–º –Ω–µ—É–ª–æ–≤–∏–º–æ–º –æ—â—É—â–µ–Ω–∏–∏ –ø—Ä–∞–≤–¥—ã, –∫–æ—Ç–æ—Ä–æ–µ –∏–∑–ª—É—á–∞–ª —ç—Ç–æ—Ç –∫–∞–¥—Ä. –ó–¥–µ—Å—å –Ω–µ –±—ã–ª–æ –Ω–∏ –≥—Ä–∞–º–º–∞ —Ñ–∞–ª—å—à–∏, –Ω–∏ –∫–∞–ø–ª–∏ –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ—Å—Ç–∏. –ü—Ä–æ—Å—Ç–æ –º–æ–º–µ–Ω—Ç –∂–∏–∑–Ω–∏, –ø–æ–π–º–∞–Ω–Ω—ã–π –≤ –æ–±—ä–µ–∫—Ç–∏–≤ —Å —Ç–∞–∫–æ–π –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, —á—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å –±–æ–ª—å–Ω–æ –æ—Ç –∫—Ä–∞—Å–æ—Ç—ã.
    </p>
    
    <div class="dialogue">
        –ö–∞–∫ —Ç–∞–∫ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ –Ω–µ–∑–Ω–∞–∫–æ–º—ã–π —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç —Ç—Ä–æ–Ω—É—Ç—å —Ç–≤–æ—é –¥—É—à—É –æ–¥–Ω–∏–º –∫–∞–¥—Ä–æ–º?
    </div>
    
    <p>
        –Ø –≤–≥–ª—è–¥—ã–≤–∞–ª—Å—è –≤ –¥–µ—Ç–∞–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø–æ–Ω–∏–º–∞–ª, —á—Ç–æ @{username} ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å —Ö–æ—Ä–æ—à–∏–º –≤–∫—É—Å–æ–º –∏ –¥–æ—Ä–æ–≥–æ–π –∫–∞–º–µ—Ä–æ–π. –≠—Ç–æ —Ö—É–¥–æ–∂–Ω–∏–∫. –ü–æ—ç—Ç —Å –æ–±—ä–µ–∫—Ç–∏–≤–æ–º –≤–º–µ—Å—Ç–æ –ø–µ—Ä–∞. –§–∏–ª–æ—Å–æ—Ñ, –≥–æ–≤–æ—Ä—è—â–∏–π —è–∑—ã–∫–æ–º —Å–≤–µ—Ç–∞ –∏ —Ç–µ–Ω–∏.
    </p>
    
    <p>
        {f'–ü–æ–¥–ø–∏—Å—å –∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É –±—ã–ª–∞ {real_captions[2] if len(real_captions) > 2 else "–ø—Ä–æ—Å—Ç–æ–π –∏ —á–µ—Å—Ç–Ω–æ–π"}' if real_captions else '–ü–æ–¥–ø–∏—Å—å –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π'} ‚Äî –∏ –≤ –Ω–µ–π –∑–≤—É—á–∞–ª–∞ —Ç–∞ –∂–µ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å, —á—Ç–æ –∏ –≤ —Å–∞–º–æ–º —Å–Ω–∏–º–∫–µ. –ù–∏–∫–∞–∫–∏—Ö –≥—Ä–æ–º–∫–∏—Ö —Å–ª–æ–≤, –Ω–∏–∫–∞–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ –æ–±—ä—è—Å–Ω–∏—Ç—å –º–∞–≥–∏—é. –ü—Ä–æ—Å—Ç–æ –∫–æ–Ω—Å—Ç–∞—Ç–∞—Ü–∏—è —Ñ–∞–∫—Ç–∞: –∫—Ä–∞—Å–æ—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏ –∏–Ω–æ–≥–¥–∞ –Ω–∞–º –≤–µ–∑—ë—Ç –µ—ë –∑–∞–º–µ—Ç–∏—Ç—å.
    </p>
    
    <div class="inner-thought">
        –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç —è –ø–æ–Ω—è–ª, —á—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–∑—É—á–∞—é —á–µ–π-—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å ‚Äî —è —É—á—É—Å—å –≤–∏–¥–µ—Ç—å –º–∏—Ä –ø–æ-–Ω–æ–≤–æ–º—É.
    </div>
    
    <p>
        –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –±—ã–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–º–∏. –õ—é–¥–∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–ª–∏ –∞–≤—Ç–æ—Ä–∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∑–∞ –∫—Ä–∞—Å–∏–≤—ã–π –∫–∞–¥—Ä, –∞ –∑–∞ —Ç–æ, —á—Ç–æ –æ–Ω –Ω–∞–ø–æ–º–Ω–∏–ª –∏–º –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –≤ –∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏. –ó–∞ —Ç–æ, —á—Ç–æ –Ω–∞—É—á–∏–ª –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –∏ –∑–∞–º–µ—á–∞—Ç—å.
    </p>
    
    <p>
        –ò —è –≤–¥—Ä—É–≥ –æ—Å–æ–∑–Ω–∞–ª, —á—Ç–æ @{username} –¥–µ–ª–∞–µ—Ç –Ω–µ—á—Ç–æ –±–æ–ª—å—à–µ–µ, —á–µ–º –ø—Ä–æ—Å—Ç–æ –≤–µ–¥—ë—Ç –±–ª–æ–≥. –≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —Å–æ–∑–¥–∞—ë—Ç –æ–∞–∑–∏—Å—ã –∫—Ä–∞—Å–æ—Ç—ã –≤ –ø—É—Å—Ç—ã–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —à—É–º–∞. –ú–µ—Å—Ç–∞, –≥–¥–µ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥—É—Ö, –≤—Å–ø–æ–º–Ω–∏—Ç—å –æ —Ç–æ–º, —á—Ç–æ –∂–∏–∑–Ω—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π.
    </p>
    
    <p>
        –ò–º–µ–Ω–Ω–æ —Ç–æ–≥–¥–∞ —è —Ä–µ—à–∏–ª, —á—Ç–æ –¥–æ–ª–∂–µ–Ω —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —ç—Ç—É –∏—Å—Ç–æ—Ä–∏—é. –ù–µ –ø–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ—Ñ–∏–ª—è, –∞ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ —á—É–≤—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø—ã—Ç–∞–ª, –ª–∏—Å—Ç–∞—è —ç—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –í–µ–¥—å –≤ –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤, —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ ‚Äî —ç—Ç–æ –∏—Å—Ç–æ—Ä–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ –º—ã –Ω–∞—Ö–æ–¥–∏–º –∫—Ä–∞—Å–æ—Ç—É –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö.
    </p>
</div>

<!-- –ì–õ–ê–í–ê 4 -->
<div class="book-page">
    <h1>–ì–ª–∞–≤–∞ 4. –û—Ç—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è</h1>
    
    <div class="chapter-epigraph">
        ¬´–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–æ ‚Äî –æ–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –Ω–∞—Å¬ª
    </div>
    
    <p class="first-paragraph">
        –ü—Ä–æ–¥–æ–ª–∂–∞—è –∏–∑—É—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å @{username}, —è –Ω–∞—á–∞–ª –∑–∞–º–µ—á–∞—Ç—å, –∫–∞–∫ –º–µ–Ω—è—é—Å—å —Å–∞–º. –ù–µ –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ, –Ω–µ –≤–Ω–µ–∑–∞–ø–Ω–æ, –∞ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è –ø–µ–π–∑–∞–∂ –∑–∞ –æ–∫–Ω–æ–º –º–µ–¥–ª–µ–Ω–Ω–æ –∏–¥—É—â–µ–≥–æ –ø–æ–µ–∑–¥–∞.
    </p>
    
    <p>
        –†–∞–Ω—å—à–µ —è –º–æ–≥ –ø—Ä–æ–π—Ç–∏ –º–∏–º–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Å–≤–µ—Ç–∞, –ø–∞–¥–∞—é—â–µ–≥–æ –Ω–∞ —Å—Ç–µ–Ω—É –¥–æ–º–∞, –∏ –Ω–µ –∑–∞–º–µ—Ç–∏—Ç—å –µ–≥–æ. –¢–µ–ø–µ—Ä—å —è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª—Å—è. –†–∞–Ω—å—à–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤ –ª—É–∂–µ –±—ã–ª–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ–º. –¢–µ–ø–µ—Ä—å —è –≤–∏–¥–µ–ª –≤ –Ω—ë–º —Ü–µ–ª—ã–π –º–∏—Ä, –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã–π –∏ –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π.
    </p>
    
    {'<figure class="hero-img"><img src="' + processed_images[3] + '" alt="' + (real_captions[3][:50] if len(real_captions) > 3 else '–ú–æ–º–µ–Ω—Ç —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è') + '"><figcaption>' + (real_captions[3] if len(real_captions) > 3 else '–í —ç—Ç–æ–º –∫–∞–¥—Ä–µ —è —É–∑–Ω–∞–ª —Å–µ–±—è') + '</figcaption></figure>' if len(processed_images) > 3 else ''}
    
    <p>
        @{username} –Ω–∞—É—á–∏–ª –º–µ–Ω—è —è–∑—ã–∫—É –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø–æ—ç–∑–∏–∏, —Å–∞–º —Ç–æ–≥–æ –Ω–µ –ø–æ–¥–æ–∑—Ä–µ–≤–∞—è. –ö–∞–∂–¥—ã–π –ø–æ—Å—Ç –±—ã–ª —É—Ä–æ–∫, –∫–∞–∂–¥–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è ‚Äî –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–º –ø–æ –∏—Å–∫—É—Å—Å—Ç–≤—É –≤–∏–¥–µ—Ç—å. –ò —Å–∞–º–æ–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ ‚Äî —ç—Ç–∏ —É—Ä–æ–∫–∏ –Ω–µ –±—ã–ª–∏ –Ω–∞–≤—è–∑—á–∏–≤—ã–º–∏ –∏–ª–∏ –¥–∏–¥–∞–∫—Ç–∏—á–Ω—ã–º–∏. –û–Ω–∏ –ø—Ä–æ—Å—Ç–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∏, –æ–∂–∏–¥–∞—è, –∫–æ–≥–¥–∞ –∑—Ä–∏—Ç–µ–ª—å –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∏—Ö –≤–æ—Å–ø—Ä–∏–Ω—è—Ç—å.
    </p>
    
    <div class="dialogue">
        –ê —Å–∫–æ–ª—å–∫–æ —Ç–∞–∫–∏—Ö —É—á–∏—Ç–µ–ª–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–∏–º–æ –Ω–∞—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –∞ –º—ã –∏—Ö –Ω–µ –∑–∞–º–µ—á–∞–µ–º?
    </div>
    
    <p>
        –Ø –Ω–∞—á–∞–ª –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤, –Ω–æ –∏ –∏—Ö —Ä–∏—Ç–º. –ü–µ—Ä–∏–æ–¥—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∑–∞—Ç–∏—à—å—è, —Å–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π, —ç–≤–æ–ª—é—Ü–∏—é —Å—Ç–∏–ª—è. {posts_count} –ø—É–±–ª–∏–∫–∞—Ü–∏–π ‚Äî —ç—Ç–æ {posts_count} –¥–Ω–µ–π –∏–∑ –∂–∏–∑–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞, {posts_count} –º–æ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑–∞–ª–∏—Å—å –µ–º—É –¥–æ—Å—Ç–æ–π–Ω—ã–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
    </p>
    
    <p>
        –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –±—ã–ª–æ –Ω–∞–±–ª—é–¥–∞—Ç—å, –∫–∞–∫ –º–µ–Ω—è–ª—Å—è –ø–æ—á–µ—Ä–∫ –∞–≤—Ç–æ—Ä–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. –†–∞–Ω–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±—ã–ª–∏ –±–æ–ª–µ–µ –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏, –±–æ–ª–µ–µ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏. –ü–æ–∑–¥–Ω–∏–µ ‚Äî –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º–∏, —Ç–æ—á–Ω—ã–º–∏, –∫–∞–∫ —Å—Ç—Ä–µ–ª—ã, –ø—É—â–µ–Ω–Ω—ã–µ –æ–ø—ã—Ç–Ω—ã–º –ª—É—á–Ω–∏–∫–æ–º.
    </p>
    
    <div class="inner-thought">
        –í–æ–∑–º–æ–∂–Ω–æ, –º—ã –≤—Å–µ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ ‚Äî –æ—Ç –∂–µ–ª–∞–Ω–∏—è –æ–±—ä—è—Å–Ω–∏—Ç—å –≤—Å—ë –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é —Å–∏–ª—ã –Ω–µ–¥–æ—Å–∫–∞–∑–∞–Ω–Ω–æ—Å—Ç–∏.
    </div>
    
    <p>
        –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {followers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∫ {following:,} –ø–æ–¥–ø–∏—Å–∫–∞–º —Ç–æ–∂–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª–æ –∏—Å—Ç–æ—Ä–∏—é. @{username} –Ω–µ –≥–Ω–∞–ª—Å—è –∑–∞ –º–∞—Å—Å–æ–≤–æ—Å—Ç—å—é, –Ω–µ –∏–≥—Ä–∞–ª –≤ –∏–≥—Ä—ã –≤–∑–∞–∏–º–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –≠—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Ä–æ—Å –æ—Ä–≥–∞–Ω–∏—á–Ω–æ, –ø—Ä–∏–≤–ª–µ–∫–∞—è –ª—é–¥–µ–π –∫–∞—á–µ—Å—Ç–≤–æ–º, –∞ –Ω–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
    </p>
    
    <p>
        –Ø –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞ —ç—Ç–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏. –ù–∞–≤–µ—Ä–Ω–æ–µ, —ç—Ç–æ –∫—Ç–æ-—Ç–æ, –∫—Ç–æ —É–º–µ–µ—Ç –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ–º, –Ω–æ –Ω–µ —Å—Ç—Ä–∞–¥–∞–µ—Ç –æ—Ç –Ω–µ–≥–æ. –ö—Ç–æ-—Ç–æ, –∫—Ç–æ –≤–∏–¥–∏—Ç –∫—Ä–∞—Å–æ—Ç—É –≤ –ø—Ä–æ—Å—Ç—ã—Ö –≤–µ—â–∞—Ö, –Ω–æ –Ω–µ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ –≤ –º–∞–Ω–µ—Ä–Ω–æ—Å—Ç—å. –ö—Ç–æ-—Ç–æ –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –≤ –º–∏—Ä–µ, –≥–¥–µ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç–∞–ª–∞ —Ä–µ–¥–∫–æ—Å—Ç—å—é.
    </p>
    
    <p>
        –ò —è –ø–æ–Ω—è–ª, —á—Ç–æ @{username} ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∏–∫ –≤ Instagram. –≠—Ç–æ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è, –æ–±—Ä–∞–∑ –º—ã—à–ª–µ–Ω–∏—è, —Å–ø–æ—Å–æ–± –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–∏—Ä–æ–º. –ò –≤–æ–∑–º–æ–∂–Ω–æ, –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∞—Å –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Ç–∞–∫–∏–º @{username} –¥–ª—è –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ, –µ—Å–ª–∏ –Ω–∞—É—á–∏—Ç—Å—è –≤–∏–¥–µ—Ç—å –∏ –¥–µ–ª–∏—Ç—å—Å—è —É–≤–∏–¥–µ–Ω–Ω—ã–º —Å —Ç–æ–π –∂–µ —á–µ—Å—Ç–Ω–æ—Å—Ç—å—é –∏ –∫—Ä–∞—Å–æ—Ç–æ–π.
    </p>
</div>

<!-- –ì–õ–ê–í–ê 5 -->
<div class="book-page">
    <h1>–ì–ª–∞–≤–∞ 5. –§–∏–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏—è</h1>
    
    <div class="chapter-epigraph">
        ¬´–ö–æ–Ω–µ—Ü ‚Äî —ç—Ç–æ –≤—Å–µ–≥–¥–∞ –Ω–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ¬ª
    </div>
    
    <p class="first-paragraph">
        –î–æ–π–¥—è –¥–æ —Å–∞–º—ã—Ö —Ä–∞–Ω–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ @{username}, —è –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å—Ç—Ä–∞–Ω–Ω—É—é –≥—Ä—É—Å—Ç—å. –ö–∞–∫ —á–∏—Ç–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –ª—é–±–∏–º–∞—è –∫–Ω–∏–≥–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É. –ö–∞–∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫, –æ—Å–æ–∑–Ω–∞—é—â–∏–π, —á—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.
    </p>
    
    <p>
        –ù–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —è —á—É–≤—Å—Ç–≤–æ–≤–∞–ª –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å. –ó–∞ —Ç–æ, —á—Ç–æ —Å–ª—É—á–∞–π–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –ø–æ–¥–∞—Ä–∏–ª –º–Ω–µ –≤—Å—Ç—Ä–µ—á—É —Å —ç—Ç–∏–º –æ—Å–æ–±–µ–Ω–Ω—ã–º –≤–∑–≥–ª—è–¥–æ–º –Ω–∞ –º–∏—Ä. –ó–∞ —Ç–æ, —á—Ç–æ –Ω–µ–∑–Ω–∞–∫–æ–º—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞—É—á–∏–ª –º–µ–Ω—è –≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É —Ç–∞–º, –≥–¥–µ —è —Ä–∞–Ω—å—à–µ –µ—ë –Ω–µ –∑–∞–º–µ—á–∞–ª.
    </p>
    
    {'<figure class="hero-img"><img src="' + processed_images[4] + '" alt="' + (real_captions[4][:50] if len(real_captions) > 4 else '–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–∞–¥—Ä –∏—Å—Ç–æ—Ä–∏–∏') + '"><figcaption>' + (real_captions[4] if len(real_captions) > 4 else '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –Ω–æ –∫—Ä–∞—Å–æ—Ç–∞ –æ—Å—Ç–∞—ë—Ç—Å—è') + '</figcaption></figure>' if len(processed_images) > 4 else ''}
    
    <p>
        @{username} –æ—Å—Ç–∞–ª—Å—è –¥–ª—è –º–µ–Ω—è –∑–∞–≥–∞–¥–∫–æ–π ‚Äî –∏ —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ. –Ø –∑–Ω–∞—é –æ –Ω—ë–º —Ä–æ–≤–Ω–æ —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –æ–Ω –∑–∞—Ö–æ—Ç–µ–ª —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ —Å–≤–æ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –≠—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å: –ø–µ—Ä–µ–¥–æ –º–Ω–æ–π —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –º–∏—Ä —á—É—Ç–æ—á–∫—É –ø—Ä–µ–∫—Ä–∞—Å–Ω–µ–µ.
    </p>
    
    <div class="dialogue">
        –†–∞–∑–≤–µ –Ω–µ –≤ —ç—Ç–æ–º —Å–º—ã—Å–ª –∏—Å–∫—É—Å—Å—Ç–≤–∞ ‚Äî –Ω–µ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –æ–±—ä—è—Å–Ω–∏—Ç—å –≤—Å—ë, –∞ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –∑–∞—Å—Ç–∞–≤–∏—Ç—å –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å?
    </div>
    
    <p>
        –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —è –ª–∏—Å—Ç–∞—é —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –ª–µ–Ω—Ç—É, —è –ª–æ–≤–ª—é —Å–µ–±—è –Ω–∞ –º—ã—Å–ª–∏: ¬´–ê —á—Ç–æ –±—ã –ø–æ–¥—É–º–∞–ª @{username} –æ–± —ç—Ç–æ–º –∫–∞–¥—Ä–µ?¬ª –ï–≥–æ —ç—Å—Ç–µ—Ç–∏–∫–∞ —Å—Ç–∞–ª–∞ –¥–ª—è –º–µ–Ω—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Ñ–∏–ª—å—Ç—Ä–æ–º, –∫—Ä–∏—Ç–µ—Ä–∏–µ–º –∫—Ä–∞—Å–æ—Ç—ã –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏.
    </p>
    
    <p>
        –ò –º–æ–∂–µ—Ç –±—ã—Ç—å, –≤ —ç—Ç–æ–º –∏ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω–∞—è —Å–∏–ª–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞ ‚Äî –Ω–µ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –ø–æ—Ä–∞–∑–∏—Ç—å –∏–ª–∏ —É–¥–∏–≤–∏—Ç—å, –∞ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≥–æ, –∫—Ç–æ —Å –Ω–∏–º —Å–æ–ø—Ä–∏–∫–æ—Å–Ω—É–ª—Å—è. –°–¥–µ–ª–∞—Ç—å –µ–≥–æ –±–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –∫ –∫—Ä–∞—Å–æ—Ç–µ, –±–æ–ª–µ–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º –∫ –¥–µ—Ç–∞–ª—è–º, –±–æ–ª–µ–µ –æ—Ç–∫—Ä—ã—Ç—ã–º –∫ —á—É–¥—É –æ–±—ã–¥–µ–Ω–Ω–æ—Å—Ç–∏.
    </p>
    
    <div class="inner-thought">
        –ö–∞–∂–¥—ã–π –∏–∑ –Ω–∞—Å –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —á—å–∏–º-—Ç–æ @{username} ‚Äî —É—á–∏—Ç–µ–ª–µ–º –∫—Ä–∞—Å–æ—Ç—ã, –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–º –≤ –º–∏—Ä –±–æ–ª–µ–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–≥–ª—è–¥–∞ –Ω–∞ –∂–∏–∑–Ω—å.
    </div>
    
    <p>
        –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Ñ–∏–ª—è @{username} ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –ø–æ–¥–ø–∏—Å–µ–π. –≠—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤ –º–∏—Ä–µ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —à—É–º–∞ –∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤—Å—ë –µ—â—ë –µ—Å—Ç—å –º–µ—Å—Ç–æ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏, –≥–ª—É–±–∏–Ω–µ, –Ω–∞—Å—Ç–æ—è—â–µ–π –∫—Ä–∞—Å–æ—Ç–µ.
    </p>
    
    <p>
        –ò –ø–æ–∫–∞ –µ—Å—Ç—å —Ç–∞–∫–∏–µ –ª—é–¥–∏, –∫–∞–∫ @{username}, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ—é—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–∏—è –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏ —Å –º–∏—Ä–æ–º, —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞–¥–µ–∂–¥–∞. –ù–∞–¥–µ–∂–¥–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –∫—Ä–∞—Å–æ—Ç–∞ –Ω–µ –∏—Å—á–µ–∑–Ω–µ—Ç –ø–æ–¥ –Ω–∞–ø–æ—Ä–æ–º —É—Ä–æ–¥—Å—Ç–≤–∞, —á—Ç–æ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ —Ä–∞—Å—Ç–≤–æ—Ä–∏—Ç—Å—è –≤ –æ–∫–µ–∞–Ω–µ —Ñ–∞–ª—å—à–∏, —á—Ç–æ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å –Ω–µ –ø–æ—Ç–µ—Ä—è–µ—Ç—Å—è –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏.
    </p>
    
    <p>
        –°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ, @{username}, –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å. –ó–∞ —Ç–æ, —á—Ç–æ —Å–æ–∑–¥–∞—ë—à—å. –ó–∞ —Ç–æ, —á—Ç–æ —É—á–∏—à—å –≤–∏–¥–µ—Ç—å. –ó–∞ —Ç–æ, —á—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—à—å: –º–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω, –µ—Å–ª–∏ –Ω–∞—É—á–∏—Ç—å—Å—è –µ–≥–æ –∑–∞–º–µ—á–∞—Ç—å.
    </p>
</div>

<!-- –≠–ü–ò–õ–û–ì -->
<div class="book-page">
    <h2>–≠–ø–∏–ª–æ–≥</h2>
    
    <p class="first-paragraph">
        –î–æ—Ä–æ–≥–æ–π —á–∏—Ç–∞—Ç–µ–ª—å, –µ—Å–ª–∏ –≤—ã –¥–æ—á–∏—Ç–∞–ª–∏ –¥–æ —ç—Ç–∏—Ö —Å—Ç—Ä–æ–∫, –∑–Ω–∞—á–∏—Ç, –∏ –≤–∞—Å –∫–æ—Å–Ω—É–ª–∞—Å—å —Ç–∞ –∂–µ –º–∞–≥–∏—è, —á—Ç–æ –∫–æ—Å–Ω—É–ª–∞—Å—å –º–µ–Ω—è –ø—Ä–∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º @{username}. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —Ç–æ–∂–µ –Ω–∞—á–Ω—ë—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–≥—Ä—É —Å–≤–µ—Ç–∞ –≤ –æ–∫–Ω–µ —Å–≤–æ–µ–≥–æ –¥–æ–º–∞, –Ω–∞ –æ—Ç—Ä–∞–∂–µ–Ω–∏—è –≤ –ª—É–∂–∞—Ö, –Ω–∞ —Ç–µ–Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –∏—Å—Ç–æ—Ä–∏–∏.
    </p>
    
    <p>
        –í –º–∏—Ä–µ, –≥–¥–µ –≤—Å—ë –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ, –≥–¥–µ –∫—Ä–∞—Å–æ—Ç–∞ —á–∞—Å—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç—Å—è –≤ –∂–µ—Ä—Ç–≤—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –ª—é–¥–∏ –∫–∞–∫ @{username} –Ω–∞–ø–æ–º–∏–Ω–∞—é—Ç –Ω–∞–º –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∫—Ä—É–≥ –∏ —É–≤–∏–¥–µ—Ç—å —á—É–¥–æ –≤ –æ–±—ã–¥–µ–Ω–Ω–æ–º.
    </p>
    
    <div class="dialogue">
        –ê –º–æ–∂–µ—Ç –±—ã—Ç—å, –∏ –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ —á—å–∏–º-—Ç–æ @{username}? –ß—å–∏–º-—Ç–æ —É—á–∏—Ç–µ–ª–µ–º –∫—Ä–∞—Å–æ—Ç—ã, –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–º –≤ –º–∏—Ä –±–æ–ª–µ–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–≥–ª—è–¥–∞?
    </div>
    
    <p>
        –≠—Ç–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞, –Ω–æ –∫—Ä–∞—Å–æ—Ç–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç, –∫–∞–∂–¥—ã–π –≤–∑–≥–ª—è–¥, –±—Ä–æ—à–µ–Ω–Ω—ã–π —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∏ –ª—é–±–æ–≤—å—é –Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä. –ò –≤ —ç—Ç–æ–º ‚Äî –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –Ω–∏ –≤ –∫–∞–∫–∏–µ —Ä–∞–º–∫–∏, –Ω–∏ –≤ –∫–∞–∫–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏, –Ω–∏ –≤ –∫–∞–∫–∏–µ –∫–Ω–∏–≥–∏.
    </p>
    
    <div class="stats-footer">
        <strong>@{username}</strong><br>
        {followers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Ä¢ {following:,} –ø–æ–¥–ø–∏—Å–æ–∫ ‚Ä¢ {posts_count} –ø—É–±–ª–∏–∫–∞—Ü–∏–π<br>
        {f'¬´{bio}¬ª<br>' if bio else ''}
        <br>
        <em>–ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ {random.choice(['15 —è–Ω–≤–∞—Ä—è', '16 —è–Ω–≤–∞—Ä—è', '17 —è–Ω–≤–∞—Ä—è'])} 2024 –≥–æ–¥–∞</em><br>
        <em>–ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ {word_count:,} —Å–ª–æ–≤</em>
    </div>
</div>

</body>
</html>"""
     
    return html

# –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é build_romantic_book